---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro'
import BaseLayout from '@/layouts/BaseLayout.astro'
import { getCollection, getEntry } from 'astro:content'
import TaxonomyList from '@/components/TaxonomyList.astro'
import { langList } from '@/i18n/data'

export const getStaticPaths = (() => {
  return langList.map((lang) => ({ params: { locale: lang } }))
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { locale } = Astro.params
const meta = await getEntry('meta', `${locale}/site-data`)
const t = await getEntry('i18n', `${locale}/translation`)
const entries = await getCollection('blog')
const publishedEntries = entries.filter(
  (entry) =>
    entry.slug.slice(0, entry.slug.indexOf('/')) === locale &&
    entry.data.draft === 'published'
)
const tags = [
  ...new Set(publishedEntries.flatMap((entry) => entry.data.tags ?? [])),
]
---

<BaseLayout
  title={meta.data.blog.tags.title}
  description={meta.data.blog.tags.description}
  og={{ show: true }}
>
  <main data-pagefind-ignore="all">
    <h1>{t.data.pages.blog.tags.title}</h1>
    <a class="back-to-link" href={`/${locale}/blog/`}>
      â—€ {t.data.pages.blog.back_to_top}
    </a>
    <hr />
    <TaxonomyList kind="tags" taxonomyList={tags} />
  </main>
</BaseLayout>
