---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro'
import { getEntry } from 'astro:content'
import BaseLayout from '@/layouts/BaseLayout.astro'
import BlogList from '@/components/BlogList.astro'
import Pager from '@/components/Pager.astro'
import { LIMIT_PER_PAGE } from '@/consts'
import { defaultLang } from '@/utils/i18n/data'
import { slugify } from '@/utils/slugify'
import { getSlugWithoutLocale } from '@/utils/get-slug-without-locale'
import { getSortedContentEntries } from '@/lib/collections/contents'
import { getTags } from '@/lib/collections/data'

export const getStaticPaths = (async ({ paginate }) => {
  const entries = await getSortedContentEntries('blog', defaultLang)
  const tags = await getTags(defaultLang)

  return tags.flatMap((tag) => {
    const displayEntries = entries.filter((entry) =>
      entry.data.tags?.some((blogTag) => blogTag.id === tag.id)
    )
    const tagSlug = slugify(getSlugWithoutLocale(tag.id))

    return paginate(displayEntries, {
      pageSize: LIMIT_PER_PAGE,
      params: { tag: tagSlug },
      props: { rawTag: tag },
    })
  })
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { page, rawTag } = Astro.props
const { tag } = Astro.params
const meta = await getEntry('meta', `${defaultLang}/site-data`)
const t = await getEntry('i18n', `${defaultLang}/translation`)
---

<BaseLayout
  title={`${meta.data.blog.title} - ${meta.data.blog.tags.title}: ${tag}`}
  description={meta.data.blog.description}
  og={{ show: true }}
>
  <main data-pagefind-ignore="all">
    <section>
      <h1>{rawTag.data.title}</h1>
      <a class="back-to-link" href={'/blog/tags'}>
        â—€ {t.data.pages.blog.tags.back_to_top}
      </a>
      <BlogList entries={page.data} kind="taxonomy" />
    </section>
    <Pager page={page} />
  </main>
</BaseLayout>
<style>
  main {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap: 4rem;
    section {
      h1 {
        margin-bottom: 1.25rem;
      }
    }
  }
</style>
