---
import { type CollectionEntry, getEntry } from 'astro:content';
import { Icon } from '@/components/ui/Icon';
import { DEFAULT_PAGINATION_WIDTH } from '@/lib/consts';
import { getLocaleFromUrl } from '@/utils/i18n/utils';
import type { Page } from 'astro';

type Props = {
  page?: Page<CollectionEntry<'blog' | 'news'>>;
};

const paginator = (
  curPageNum: number,
  totalPageNum: number,
  width: number = DEFAULT_PAGINATION_WIDTH,
) => {
  const prevEnd = curPageNum - width;
  const nextEnd = curPageNum + width;
  const ranges = [];

  for (let i = 1; i <= totalPageNum; i += 1) {
    if (curPageNum === 1) {
      if (i <= nextEnd) ranges.push(i);
    } else if (curPageNum === totalPageNum) {
      if (i >= prevEnd) ranges.push(i);
    } else {
      if (i >= prevEnd && i <= nextEnd) ranges.push(i);
    }
  }

  return ranges;
};

const currentPath = Astro.url.pathname;
const locale = getLocaleFromUrl(Astro.url);
const t = await getEntry('i18n', `${locale}/translation`);
const { page } = Astro.props;
---

{
  page !== undefined && (
    <nav data-pagefind-ignore="all">
      {page.url.prev ? (
        <a aria-label={t.data.pager.left_arrow_label} href={page.url.prev}>
          <Icon iconName="left-arrow" width={25} height={25} />
        </a>
      ) : (
        <Icon iconName="left-arrow" width={25} height={25} />
      )}
      <ul>
        {paginator(page.currentPage, page.lastPage).map((pg) => {
          if (pg === page.currentPage) {
            return <li>{pg}</li>
          } else {
            if (pg === 1) {
              return (
                <li>
                  <a
                    href={`/${currentPath.split('/').slice(1, -2).join('/')}/`}
                  >
                    {pg}
                  </a>
                </li>
              )
            } else {
              return (
                <li>
                  {page.currentPage === 1 ? (
                    <a
                      href={`/${currentPath.split('/').slice(1, -1).join('/')}/${pg}/`}
                    >
                      {pg}
                    </a>
                  ) : (
                    <a
                      href={`/${currentPath.split('/').slice(1, -2).join('/')}/${pg}/`}
                    >
                      {pg}
                    </a>
                  )}
                </li>
              )
            }
          }
        })}
      </ul>
      {page.url.next ? (
        <a aria-label={t.data.pager.right_arrow_label} href={page.url.next}>
          <Icon iconName="right-arrow" width={25} height={25} />
        </a>
      ) : (
        <Icon iconName="right-arrow" width={25} height={25} />
      )}
    </nav>
  )
}
<style>
  nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 0.35rem;
  }
  nav ul {
    display: flex;
    gap: 1.8rem;
  }
  nav li {
    list-style-type: none;
    font-size: 1.5rem;
    &:not(a) {
      color: var(--color-gray);
    }
  }
  nav a {
    text-decoration: none;
    color: var(--color-accent);
    &:hover {
      color: var(--color-dark-accent);
    }
  }
  :not(a > svg) {
    color: var(--color-gray);
  }
</style>
