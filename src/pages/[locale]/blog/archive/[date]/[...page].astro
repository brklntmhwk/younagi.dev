---
import { getEntry } from 'astro:content';
import { BlogList } from '@/components/models/BlogList';
import { formatDate } from '@/components/models/FormattedDate';
import { Pager } from '@/components/models/Pager';
import BaseLayout from '@/layouts/BaseLayout.astro';
import {
  getLocaleContentEntries,
  getSortedContentEntries,
} from '@/lib/collections/contents';
import { LIMIT_PER_PAGE } from '@/lib/consts';
import { ArchiveSlugify } from '@/utils/archive-slugify';
import { convertDateStr } from '@/utils/convert-date-str';
import { nonDefaultLocaleList } from '@/utils/i18n/data';
import type { GetStaticPaths } from 'astro';

export const getStaticPaths = (async ({ paginate }) => {
  const entries = await getSortedContentEntries('blog');

  const dates = [
    ...new Set(entries.map((entry) => ArchiveSlugify(entry.data.publishedAt))),
  ];

  return nonDefaultLocaleList.flatMap((lang) => {
    return dates.flatMap((date) => {
      const displayEntries = getLocaleContentEntries<'blog'>(
        entries,
        lang,
      ).filter((entry) => ArchiveSlugify(entry.data.publishedAt) === date);

      return paginate(displayEntries, {
        pageSize: LIMIT_PER_PAGE,
        params: { locale: lang, date },
      });
    });
  });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
const { date, locale } = Astro.params;
const meta = await getEntry('meta', `${locale}/site-data`);
const t = await getEntry('i18n', `${locale}/translation`);
const convertedDate = convertDateStr(date);
const displayDate = formatDate(convertedDate, locale, {
  year: true,
  month: true,
  day: false,
});
---

<BaseLayout
  title={`${meta!.data.blog.title} - ${meta!.data.blog.archive.title}: ${date}`}
  description={meta!.data.blog.description}
  og={{ show: true }}
>
  <main class="flex flex-col justify-between gap-16" data-pagefind-ignore="all">
    <section>
      <h1 class="text-3xl sm:text-4xl font-extrabold mb-5">{displayDate}</h1>
      <a class="text-base text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-500" href={`/${locale}/blog/archive/`}>
        â—€ {t!.data.pages.blog.archive.back_to_top}
      </a>
      <BlogList
        entries={page.data}
        taxonomies={{ show: true, shouldDisplay: ['category', 'tags'] }}
      />
    </section>
    <Pager page={page} />
  </main>
</BaseLayout>
