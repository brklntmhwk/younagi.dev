---
import type { ImageMetadata } from 'astro'
// import { Image } from 'astro:assets'
import { getEntry } from 'astro:content'
import ProfileIcon from './ProfileIcon.astro'
import { getLocaleFromUrl } from '@/i18n/utils'
import ProfileImage from '@/assets/images/profile.png'

type Props = {
  image?: {
    alt: string
    src: ImageMetadata
  }
  direction: 'left' | 'right'
  content: string
}

const { image, direction, content } = Astro.props
const locale = getLocaleFromUrl(Astro.url)
const t = await getEntry('i18n', `${locale}/translation`)
---

<div class:list={['message', direction]}>
  <div class="icon-wrapper">
    <ProfileIcon
      class="message-icon"
      src={image ? image.src : ProfileImage}
      alt={image ? image.alt : t.data.message.fallback_icon_alt}
      size={90}
    />
    <!-- <Image
      class="icon message-icon"
      src={image ? image.src : ProfileImage}
      alt={image ? image.alt : t.data.message.fallback_icon_alt}
      width={90}
      height={90}
      format="avif"
      quality={45}
    /> -->
    <span>{image ? image.alt : t.data.message.fallback_icon_alt}</span>
  </div>
  <div class:list={['balloon', `from-${direction}`]}>
    <p>{content}</p>
  </div>
</div>
<style>
  .message {
    max-width: 60rem;
    display: flex;
    gap: 0.5rem;
    padding: 0.75rem 0;
    &.left {
      align-self: flex-start;
      flex-direction: row;
    }
    &.right {
      align-self: flex-end;
      flex-direction: row-reverse;
    }
    .icon-wrapper {
      display: flex;
      flex-direction: column;
      place-items: center;
      place-self: flex-end;
      gap: 0.25rem;
      flex-shrink: 0;
      span {
        font-size: 0.95rem;
      }
    }
    .balloon {
      display: inline-block;
      position: relative;
      padding: 0.175rem 0.5rem;
      margin: 0.5rem 0.5rem 1.85rem 0.5rem;
      background-color: var(--bg);
      border-image-source: url("data:image/svg+xml;utf8,<?xml version='1.0' encoding='UTF-8' ?><svg version='1.1' width='8' height='8' xmlns='http://www.w3.org/2000/svg'><path d='M3 1 h1 v1 h-1 z M4 1 h1 v1 h-1 z M2 2 h1 v1 h-1 z M5 2 h1 v1 h-1 z M1 3 h1 v1 h-1 z M6 3 h1 v1 h-1 z M1 4 h1 v1 h-1 z M6 4 h1 v1 h-1 z M2 5 h1 v1 h-1 z M5 5 h1 v1 h-1 z M3 6 h1 v1 h-1 z M4 6 h1 v1 h-1 z' fill='rgb(28, 27, 34)' /></svg>");
      border: 4px solid var(--fg);
      border-image-slice: 3;
      border-image-width: 3;
      border-image-repeat: repeat;
      border-image-outset: 2;
      p {
        font-size: 1.05rem;
      }
      &::before,
      &::after {
        position: absolute;
        content: '';
      }
      &.from-left {
        &::before,
        &::after {
          left: 2rem;
        }
        &::before {
          bottom: -14px;
          width: 18px;
          height: 10px;
          background-color: var(--bg);
          border-right: 4px solid var(--fg);
          border-left: 4px solid var(--fg);
        }
        &::after {
          bottom: -18px;
          width: 18px;
          height: 4px;
          margin-right: 8px;
          color: var(--fg);
          box-shadow:
            -4px 0,
            4px 0,
            -4px 4px var(--bg),
            0px 4px,
            -8px 4px,
            -3px 8px,
            -8px 8px;
        }
      }
      &.from-right {
        &::before,
        &::after {
          right: 2rem;
        }
        &::before {
          bottom: -14px;
          width: 18px;
          height: 10px;
          background-color: var(--bg);
          border-right: 4px solid var(--fg);
          border-left: 4px solid var(--fg);
        }
        &::after {
          bottom: -18px;
          width: 18px;
          height: 4px;
          margin-left: 8px;
          color: var(--fg);
          box-shadow:
            -4px 0,
            4px 0,
            4px 4px var(--bg),
            0 4px,
            8px 4px,
            4px 8px,
            12px 8px;
        }
      }
    }
  }
  @media (min-width: 768px) {
    .message {
      .balloon {
        padding: 0.5rem 0.85rem;
      }
    }
  }
  :global(.dark) {
    .message {
      .balloon {
        border-image-source: url("data:image/svg+xml;utf8,<?xml version='1.0' encoding='UTF-8' ?><svg version='1.1' width='8' height='8' xmlns='http://www.w3.org/2000/svg'><path d='M3 1 h1 v1 h-1 z M4 1 h1 v1 h-1 z M2 2 h1 v1 h-1 z M5 2 h1 v1 h-1 z M1 3 h1 v1 h-1 z M6 3 h1 v1 h-1 z M1 4 h1 v1 h-1 z M6 4 h1 v1 h-1 z M2 5 h1 v1 h-1 z M5 5 h1 v1 h-1 z M3 6 h1 v1 h-1 z M4 6 h1 v1 h-1 z' fill='rgb(246.59, 246.59, 246.59)' /></svg>");
      }
    }
  }
  @media (prefers-color-scheme: dark) {
    .message {
      .balloon {
        border-image-source: url("data:image/svg+xml;utf8,<?xml version='1.0' encoding='UTF-8' ?><svg version='1.1' width='8' height='8' xmlns='http://www.w3.org/2000/svg'><path d='M3 1 h1 v1 h-1 z M4 1 h1 v1 h-1 z M2 2 h1 v1 h-1 z M5 2 h1 v1 h-1 z M1 3 h1 v1 h-1 z M6 3 h1 v1 h-1 z M1 4 h1 v1 h-1 z M6 4 h1 v1 h-1 z M2 5 h1 v1 h-1 z M5 5 h1 v1 h-1 z M3 6 h1 v1 h-1 z M4 6 h1 v1 h-1 z' fill='rgb(246.59, 246.59, 246.59)' /></svg>");
      }
    }
  }
</style>
