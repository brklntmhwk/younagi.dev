---
import 'katex/dist/katex.min.css';
import type { CollectionEntry } from 'astro:content';
import { getEntry } from 'astro:content';
import { Article } from '@/components/models/Article';
import { FormattedDate } from '@/components/models/FormattedDate';
import { Taxonomy } from '@/components/models/Taxonomy';
import { Toc } from '@/components/models/Toc';
import { BuyMeACoffee } from '@/components/ui/BuyMeACoffee';
import { Icon } from '@/components/ui/Icon';
import { Likes } from '@/components/ui/Likes/Likes';
import { StarRating } from '@/components/ui/StarRating';
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getBlogCategory, getBlogTags } from '@/lib/collections/data';
import { getSlugWithoutLocale } from '@/utils/get-slug-without-locale';
import { getLocaleFromUrl, useTranslatedPath } from '@/utils/i18n/utils';
import type { MarkdownHeading } from 'astro';

type Props = {
  entry: CollectionEntry<'blog'>;
  headings: MarkdownHeading[];
};

const locale = getLocaleFromUrl(Astro.url);
const t = await getEntry('i18n', `${locale}/translation`);
const translatePath = useTranslatedPath(locale);
const { entry, headings } = Astro.props;
const { data, collection, slug } = entry;
const {
  title,
  description,
  category: blogCategory,
  tags: blogTags,
  publishedAt,
  modifiedAt,
  level,
  thumbnail,
} = data;
const slugWithoutLocale = getSlugWithoutLocale(slug);
const category = await getBlogCategory(blogCategory);
const tags = await getBlogTags(blogTags);
---

<BaseLayout
  title={title}
  description={description ?? ''}
  og={{
    show: true,
    height: 630,
    width: 1200,
    image: new URL(
      translatePath(`/api/og/${collection}/${slugWithoutLocale}.png`),
      Astro.site
    ),
    type: 'article',
  }}
>
  <main>
    <Article kind="blog">
      <section slot="metadata" class="md:max-w-3xl flex flex-col items-center gap-3 sm:gap-4 mx-auto">
        {
          thumbnail && (
            <p class="text-center text-3xl sm:text-4xl font-extrabold mb-4">{thumbnail}</p>
          )
        }
        <div class="text-sm xs:text-base sm:text-lg flex flex-wrap gap-x-4 gap-y-1">
          <div class="flex items-center gap-1.5">
            <Icon iconName="publish" width={20} height={20} />
            <FormattedDate date={publishedAt} locale={locale} />
          </div>
          {
            modifiedAt && (
              <div class="flex items-center gap-1.5">
                <Icon iconName="update" width={20} height={20} />
                <FormattedDate date={modifiedAt} locale={locale} />
              </div>
            )
          }
        </div>
        <h1 class="text-center text-2xl sm:text-3xl xl:text-4xl font-extrabold leading-snug sm:leading-snug md:leading-snug xl:leading-normal">{title}</h1>
        <div class="text-[0.825rem] sm:text-[1.045rem] pt-2.5 pb-3.5 flex flex-wrap justify-center items-center gap-y-6 sm:gap-y-7 gap-x-3">
          {
            category && (
              <Taxonomy
                kind={blogCategory.metadata.collection}
                taxonomy={category}
              />
            )
          }
          {
            tags.length !== 0 &&
              tags.map((tag) => (
                <Taxonomy kind={blogTags.metadata.collection} taxonomy={tag} />
              ))
          }
        </div>
        {
          level && (
            <StarRating
              method="rating"
              value={level}
              leftEnd={t.data.layouts.blog.level_easy}
              rightEnd={t.data.layouts.blog.level_hard}
            />
          )
        }
        <Toc {headings} />
      </section>
      <section slot="content" class="prose sm:prose-lg dark:prose-dark min-w-full">
        <slot />
      </section>
      <section slot="cta" class="flex flex-wrap items-center gap-x-7 gap-y-3">
        <Likes
          client:only="solid"
          slug={slugWithoutLocale}
          {collection}
          t={t.data.likes}
        />
        <BuyMeACoffee />
      </section>
    </Article>
  </main>
</BaseLayout>
