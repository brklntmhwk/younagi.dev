---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro'
import { getCollection, getEntry } from 'astro:content'
import BaseLayout from '@/layouts/BaseLayout.astro'
import BlogList from '@/components/BlogList.astro'
import Pager from '@/components/Pager.astro'
import { LIMIT_PER_PAGE } from '@/lib/consts'

export const getStaticPaths = (async ({ paginate }) => {
  const entries = (await getCollection('blog')).sort(
    (a, b) => a.data.publishedAt.valueOf() - b.data.publishedAt.valueOf()
  )
  const tags = [...new Set(entries.flatMap((entry) => entry.data.tags ?? []))]

  return tags.flatMap((tag) => {
    const displayEntries = entries.filter((entry) =>
      entry.data.tags?.includes(tag)
    )

    return paginate(displayEntries, {
      pageSize: LIMIT_PER_PAGE,
      params: { tag },
    })
  })
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const meta = await getEntry('meta', 'site-data')
const { page } = Astro.props
const { tag } = Astro.params
---

<BaseLayout
  title={`${meta.data.blog.title} - Tag: ${tag}`}
  description={meta.data.blog.description}
  ><main>
    <section>
      <h1>{tag}</h1>
      <BlogList entries={page.data} kind="taxonomy" />
    </section>
    <Pager page={page} />
  </main>
</BaseLayout>
<style>
  h1 {
    text-transform: capitalize;
  }
</style>
