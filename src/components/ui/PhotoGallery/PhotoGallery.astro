---
import { actions } from 'astro:actions';
import { getEntry } from 'astro:content';
import { CardGrid } from '@/components/elements/Card';
import { ACCOUNT_ID, UNSPLASH_BASE_URL } from '@/lib/consts';
import { getLocaleFromUrl } from '@/utils/i18n/utils';
import PhotoItem from './PhotoItem.astro';

const locale = getLocaleFromUrl(Astro.url);
const t = await getEntry('i18n', `${locale}/translation`);
const { data: photos, error } = await Astro.callAction(actions.photos.fetch, {
  username: ACCOUNT_ID,
});
if (error) {
  console.error(
    `Failed to fetch photos.\nstatus:${error.status}\ncode:${error.code}\nmessage:${error.message}\nname:${error.name}\nstack:${error.stack}`,
  );
  throw new Error(
    `Failed to fetch photos.\nstatus:${error.status}\ncode:${error.code}\nmessage:${error.message}\nname:${error.name}\nstack:${error.stack}`,
  );
}
const username = photos[0]?.user.username!;
---

<div class="flex flex-col gap-6 py-5 px-1">
  <CardGrid>
    {
      photos.map((photo, i) => (
        <PhotoItem {photo} order={i + 1} />
      ))
    }
  </CardGrid>
  <aside>
    <p class="text-sm md:text-base">
      {t!.data.photo_gallery.credit_label}
      <cite>
        <a
          href={`${UNSPLASH_BASE_URL}/@${ACCOUNT_ID}`}
          class="text-primary hover:text-primary-dim"
        >
          {username}
        </a>
      </cite>
      /
      <cite>
        <a href={UNSPLASH_BASE_URL} class="text-primary hover:text-primary-dim">
          Unsplash
        </a>
      </cite>
    </p>
  </aside>
</div>
