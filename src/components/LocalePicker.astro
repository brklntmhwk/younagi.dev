---
import { getEntry } from 'astro:content'
import { languages } from '@/utils/i18n/data'
import Modal from '@/components/Modal.astro'
import { getLocaleFromUrl } from '@/utils/i18n/getLocaleFromUrl'

const locale = getLocaleFromUrl(Astro.url)
const t = await getEntry('i18n', `${locale}/translation`)
const [_firstSlash, _prevLocale, ...rest] = Astro.url.pathname.split('/')
const slug = rest.join('/')
---

<Modal
  modalName="lang"
  iconName="language"
  buttonLabel={t.data.locale_picker.button_label}
  data-border-image-url="url(/border-image.gif)"
>
  <ul class="lang-list">
    {
      Object.entries(languages).map(([lang, label]) => (
        <li>
          <a
            class:list={[{ active: lang === locale }]}
            href={`/${lang}/${slug}`}
          >
            {label}
          </a>
        </li>
      ))
    }
  </ul>
</Modal>
<style>
  ul.lang-list {
    display: grid;
    gap: 1.5rem;
    margin-left: 1.25rem;
    a {
      color: var(--fg);
      font-size: 1.15rem;
      text-decoration: none;
      position: relative;
      border-bottom: 2px solid transparent;
      &:hover::before {
        font-family: var(--base-font);
        content: 'â–¶';
        position: absolute;
        top: -0.275rem;
        left: -1.5rem;
        font-size: 1.25rem;
        align-self: center;
      }
      &.active {
        font-weight: 700;
      }
    }
  }
</style>
<script>
  function init() {
    const listenToModalEvents = (modalButton: Element, modal: Element) => {
      modalButton.addEventListener('click', () => {
        modal.classList.toggle('hidden')
      })

      modal.addEventListener('click', (e) => {
        if (e.target === modal) {
          modal.classList.toggle('hidden')
        }
      })

      window.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
          modal.classList.add('hidden')
        }
        if (e.code === 'KeyL' && e.ctrlKey && e.shiftKey) {
          e.preventDefault()
          modal.classList.toggle('hidden')
        }
      })
    }

    const modalButton = document.querySelector('#lang-icon-button')
    const modal = document.querySelector('#lang-modal')

    if (modalButton && modal) {
      listenToModalEvents(modalButton, modal)
    }
  }

  const eventsToBeAdded = ['DOMContentLoaded'] as const

  eventsToBeAdded.forEach((evName) => {
    document.addEventListener(evName, init)
  })
</script>
