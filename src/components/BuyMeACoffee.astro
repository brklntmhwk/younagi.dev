---
import { getEntry } from 'astro:content'
import { getLocaleFromUrl } from '@/utils/i18n/getLocaleFromUrl'
import Svg from './Svg/index.astro'
import { ACCOUNT_ID } from '@/consts'

const locale = getLocaleFromUrl(Astro.url)
const t = await getEntry('i18n', `${locale}/translation`)
---

<div id="bmc-payment-modal" class="bmc-payment-modal hidden">
  <iframe
    id="bmc-frame"
    title="Buy Me A Coffee"
    allow="payment"
    src={`https://buymeacoffee.com/widget/page/${ACCOUNT_ID}?description=支援してして`}
    fetchpriority="low"
    loading="lazy"></iframe>
</div>
<div class="bmc">
  <button id="bmc-button" class="bmc-button">
    <Svg iconName="bmc" height={32} width={32} />
    <span>Buy Me a Coffee</span>
  </button>
  <div class="bmc-greeting">
    <p>{t.data.bmc.greeting_message}</p>
    <span class="ornament"></span>
  </div>
</div>
<style>
  .bmc {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    align-items: center;
    place-self: center;
    .bmc-button {
      background-color: hsla(228, 95%, 68%, 1);
      display: flex;
      gap: 0.5rem;
      align-items: center;
      border-radius: 0.5rem;
      padding: 0.5rem 0.85rem;
      span {
        color: hsla(0, 0%, 96%, 1);
        font-size: 1.125rem;
        font-weight: 700;
      }
      &:hover {
        background-color: hsla(228, 95%, 68%, 0.9);
      }
    }
    .bmc-greeting {
      position: relative;
      padding: 0.2rem 0 0.2rem 1.75rem;
      margin: 1.25rem 0;
    }
    .bmc-greeting::before {
      content: '';
      position: absolute;
      top: -8px;
      left: 0;
      width: 20px;
      height: 1px;
      transform: rotate(-38deg);
      box-sizing: border-box;
      background-color: var(--gray);
    }
    .bmc-greeting::after {
      content: '';
      position: absolute;
      bottom: -8px;
      left: 0;
      width: 20px;
      height: 1px;
      transform: rotate(38deg);
      box-sizing: border-box;
      background-color: var(--gray);
    }
    .bmc-greeting > .ornament {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
    .bmc-greeting > .ornament::before {
      content: '';
      position: absolute;
      top: -1px;
      left: 0;
      width: 28px;
      height: 1px;
      transform: rotate(-25deg);
      box-sizing: border-box;
      background-color: var(--gray);
    }
    .bmc-greeting > .ornament::after {
      content: '';
      position: absolute;
      bottom: -1px;
      left: 0;
      width: 28px;
      height: 1px;
      transform: rotate(25deg);
      box-sizing: border-box;
      background-color: var(--gray);
    }
  }
  .bmc-payment-modal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    width: 100vw;
    height: 100dvh;
    padding-top: 6.25rem;
    z-index: 90;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    background-color: var(--modal-bg);
    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.25);
    &.hidden {
      display: none;
    }
    & #bmc-frame {
      background-color: color-mix(in srgb, var(--bg) 97%, var(--fg) 3%);
      width: 100%;
      height: 100%;
      max-width: 38rem;
      max-height: 60vh;
      margin: 0 1.5rem;
      box-sizing: border-box;
      border-radius: 0.25rem;
    }
  }
</style>
<script>
  function init() {
    const listenToModalEvents = (modalButton: Element, modal: Element) => {
      modalButton.addEventListener('click', () => {
        modal.classList.toggle('hidden')
      })

      modal.addEventListener('click', (e) => {
        if (e.target === modal) {
          modal.classList.toggle('hidden')
        }
      })
    }

    const modalButton = document.querySelector('#bmc-button')
    const modal = document.querySelector('#bmc-payment-modal')

    if (modalButton && modal) {
      listenToModalEvents(modalButton, modal)
    }
  }

  const eventsToBeAdded = ['DOMContentLoaded'] as const

  eventsToBeAdded.forEach((evName) => {
    document.addEventListener(evName, init)
  })
</script>
