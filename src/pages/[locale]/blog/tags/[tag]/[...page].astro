---
import { getEntry } from 'astro:content';
import { BlogList } from '@/components/models/BlogList';
import { Pager } from '@/components/models/Pager';
import BaseLayout from '@/layouts/BaseLayout.astro';
import {
  getLocaleContentEntries,
  getSortedContentEntries,
} from '@/lib/collections/contents';
import { getDataEntries } from '@/lib/collections/data';
import { LIMIT_PER_PAGE } from '@/lib/consts';
import { langList } from '@/utils/i18n/data';
import { slugify } from '@/utils/slugify';
import type { GetStaticPaths } from 'astro';

export const getStaticPaths = (async ({ paginate }) => {
  const entries = await getSortedContentEntries('blog');
  const tags = await getDataEntries('tags');

  return langList.flatMap((lang) => {
    return tags.flatMap((tag) => {
      return tag.data.flatMap((tagData) => {
        const displayEntries = getLocaleContentEntries<'blog'>(
          entries,
          lang,
        ).filter((entry) =>
          entry.data.tags.slugList?.some((blogTag) => blogTag === tagData.slug),
        );

        return paginate(displayEntries, {
          pageSize: LIMIT_PER_PAGE,
          params: { locale: lang, tag: slugify(tagData.slug) },
          props: { title: tagData.title },
        });
      });
    });
  });
}) satisfies GetStaticPaths;

const { page, title } = Astro.props;
const { tag, locale } = Astro.params;
const meta = await getEntry('meta', `${locale}/site-data`);
const t = await getEntry('i18n', `${locale}/translation`);
---

<BaseLayout
  title={`${meta.data.blog.title} - ${meta.data.blog.tags.title}: ${tag}`}
  description={meta.data.blog.description}
  og={{ show: true }}
>
  <main class="flex flex-col justify-between gap-16" data-pagefind-ignore="all">
    <section>
      <h1 class="text-3xl md:text-4xl font-extrabold mb-5">{title}</h1>
      <a class="text-lg md:text-xl text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-500" href={`/${locale}/blog/tags/`}>
        â—€ {t.data.pages.blog.tags.back_to_top}
      </a>
      <BlogList
        entries={page.data}
        taxonomies={{ show: true, shouldDisplay: ['category'] }}
      />
    </section>
    <Pager page={page} />
  </main>
</BaseLayout>
