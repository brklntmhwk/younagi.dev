---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';
import { getCollection, getEntry } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import Pager from '@/components/Pager.astro';
import { LIMIT_PER_PAGE } from '@/lib/consts';
// import BlogLayout from '../../layouts/BlogLayout.astro';

// https://github.com/manuelernestog/astrofy/blob/main/src/pages/blog/%5B...page%5D.astro

export const getStaticPaths = (async ({ paginate }) => {
  const entries = (await getCollection('blog')).sort(
    (a, b) => a.data.publishedAt.valueOf() - b.data.publishedAt.valueOf()
  );

  return paginate(entries, { pageSize: LIMIT_PER_PAGE });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const meta = await getEntry('meta', 'site-data');
const { page } = Astro.props;
---

<BaseLayout
  title={meta.data.blog.title}
  description={meta.data.blog.description}
>
  <div>
    {
      page.data.length === 0 ? (
        <div>
          <p>Woops! No entry found..</p>
        </div>
      ) : (
        <>
          <ul>
            {page.data.map((entry) => (
              <>
                <div>
                  <a href={`blog/${entry.slug}`}>{entry.data.title}</a>
                </div>
              </>
            ))}
          </ul>
          <Pager page={page} />
        </>
      )
    }
  </div>
</BaseLayout>
