---
// import { ViewTransitions } from 'astro:transitions'
import { getAbsoluteLocaleUrl } from 'astro:i18n'
import { langList } from '@/utils/i18n/data'
import type { Props as BaseLayoutProps } from '@/layouts/BaseLayout.astro'

type Props = BaseLayoutProps

const canonicalURL = new URL(Astro.url.pathname, Astro.site)
const [_firstSlash, _locale, ...rest] = Astro.url.pathname.split('/')
const slug = rest.join('/')
const { title, description, og } = Astro.props
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/x-icon" href="/favicon.ico" sizes="48x48" />
<link rel="sitemap" href="/sitemap-index.xml" />
<meta name="generator" content={Astro.generator} />
<link
  rel="preload"
  href="/fonts/PixelMplus10-Regular.woff2"
  as="font"
  type="font/woff2"
  crossorigin
/>
<link
  rel="preload"
  href="/fonts/PixelMplus10-Bold.woff2"
  as="font"
  type="font/woff2"
  crossorigin
/>
{
  langList.map((lang) => (
    <>
      <link
        rel="alternate"
        href={getAbsoluteLocaleUrl(lang, slug)}
        hreflang={lang}
      />
      <link
        rel="alternate"
        type="application/rss+xml"
        href={getAbsoluteLocaleUrl(lang, 'rss.xml')}
      />
    </>
  ))
}
<link rel="canonical" href={canonicalURL} />
<title data-pagefind-meta="title">{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
{
  og.show && (
    <>
      <meta
        property="og:image"
        content={og.image ?? new URL('/blog-placeholder-1.jpg', Astro.url)}
      />
      <meta
        property="og:image:height"
        content={(og.height ?? 720).toString()}
      />
      <meta property="og:image:width" content={(og.width ?? 720).toString()} />
      <meta property="og:type" content={og.type ?? 'website'} />
    </>
  )
}
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
{
  og.show && (
    <>
      <meta
        property="twitter:card"
        content={og.type === 'article' ? 'summary_large_image' : 'summary'}
      />
      <meta
        property="twitter:image"
        content={og.image ?? new URL('/blog-placeholder-1.jpg', Astro.url)}
      />
    </>
  )
}
<!-- <ViewTransitions /> -->
