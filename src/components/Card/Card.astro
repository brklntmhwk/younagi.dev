---
import {
  type CardBorderType,
  type ComponentCardProps,
  type ElementCardProps,
  isElementCard,
  isValidBorderType,
} from './card';

type Props = ComponentCardProps | ElementCardProps;

let cardBorderType: CardBorderType = 'solid';
let isAnimated = false;

if (isElementCard(Astro.props)) {
  const { 'data-border-type': dataBorderType } = Astro.props;
  if (isValidBorderType(dataBorderType)) {
    cardBorderType = dataBorderType;
  }
} else {
  const { borderType, isAnimated: animation } = Astro.props;
  cardBorderType = borderType;
  isAnimated = animation;
}
---

<div class:list={["card", `${cardBorderType}-border`, { "fade-in-up": isAnimated }]}>
  <slot name="image" />
  <slot name="content" />
</div>
<style>
  .card {
    background-color: var(--bg);
    max-width: 100%;
    height: 15rem;
    display: flex;
    flex-direction: column;
    gap: 0.525rem;
    break-inside: avoid;
    &:hover {
      background-color: var(--bg-hover);
    }
    & :global(.card-image) {
      max-height: 8.75rem;
      min-height: 6.75rem;
      padding: 0.25rem;
      display: flex;
      justify-content: center;
      & :global(img) {
        object-fit: contain;
        width: 100%;
        height: 100%;
      }
    }
    & :global(.card-content) {
      font-size: 0.925rem;
      padding: 0.175rem 0.325rem;
      overflow-y: auto;
    }
    @media (min-width: 320px) {
      max-width: 18rem;
    }
    @media (min-width: 1280px) {
      max-width: 20rem;
    }
  }
</style>
