name: Deployment to Cloudflare Pages

on:
  push:
    branches:
      - main

env:
  PNPM_HOME: /home/runner/.local/share/pnpm

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      statuses: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Configure pnpm path
        run: echo "${{ env.PNPM_HOME }}" >> $GITHUB_PATH
      - name: Set up pnpm with corepack
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate
          pnpm -v
      - name: Get pnpm store path
        id: pnpm_cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Set up pnpm store and build artifact cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm_cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-astro-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-astro-
      - name: Install dependencies
        run: pnpm i --frozen-lockfile
      - name: Build project
        run: pnpm run build
        env:
          UNSPLASH_API_ACCESS_KEY: ${{ secrets.UNSPLASH_API_ACCESS_KEY }}
      - name: Migrate Cloudflare D1 databases
        run: pnpm wrangler d1 migrations apply younagi_dev_db --remote
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      - name: Publish to Cloudflare Pages
        id: cloudflare_pages_deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./dist --project-name=younagidev --commit-dirty=true
      - name: Add publish URL
        uses: actions/github-script@v6
        with:
          script: |
            const sha = context.payload.pull_request?.head.sha ?? context.sha;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: 'Cloudflare Pages',
              description: 'Cloudflare Pages deployment',
              state: 'success',
              sha,
              target_url: "${{ steps.cloudflare_pages_deploy.outputs.deployment-url }}",
            });
