---
import type { GetStaticPaths } from 'astro'
import { getEntry } from 'astro:content'
import BaseLayout from '@/layouts/BaseLayout.astro'
import { BlogList } from '@/components/BlogList'
import { Pager } from '@/components/Pager'
import { LIMIT_PER_PAGE } from '@/lib/consts'
import { langList } from '@/utils/i18n/data'
import { slugify } from '@/utils/slugify'
import { getSlugWithoutLocale } from '@/utils/get-slug-without-locale'
import {
  getLocaleContentEntries,
  getSortedContentEntries,
} from '@/lib/collections/contents'
import { getCategories } from '@/lib/collections/data'

export const getStaticPaths = (async ({ paginate }) => {
  const entries = await getSortedContentEntries('blog')
  const categories = await getCategories()

  return langList.flatMap((lang) => {
    return categories.flatMap((category) => {
      const displayEntries = getLocaleContentEntries<'blog'>(
        entries,
        lang
      ).filter((entry) => entry.data.category.id === category.id)
      const categorySlug = slugify(getSlugWithoutLocale(category.id))

      return paginate(displayEntries, {
        pageSize: LIMIT_PER_PAGE,
        params: { locale: lang, category: categorySlug },
        props: { rawCategory: category },
      })
    })
  })
}) satisfies GetStaticPaths

const { page, rawCategory } = Astro.props
const { category, locale } = Astro.params
const meta = await getEntry('meta', `${locale}/site-data`)
const t = await getEntry('i18n', `${locale}/translation`)
---

<BaseLayout
  title={`${meta.data.blog.title} - ${meta.data.blog.categories.title}: ${category}`}
  description={meta.data.blog.description}
  og={{ show: true }}
>
  <main data-pagefind-ignore="all">
    <section>
      <h1>{rawCategory.data.title}</h1>
      <a class="classic-blue-link" href={`/${locale}/blog/categories`}>
        â—€ {t.data.pages.blog.categories.back_to_top}
      </a>
      <BlogList
        entries={page.data}
        taxonomies={{ show: true, shouldDisplay: ['tags'] }}
      />
    </section>
    <Pager page={page} />
  </main>
</BaseLayout>
<style>
  main {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap: 4rem;
    section {
      h1 {
        margin-bottom: 1.25rem;
      }
    }
  }
</style>
