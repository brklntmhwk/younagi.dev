---
import '@pagefind/default-ui/css/ui.css'
import { getEntry } from 'astro:content'
import Svg from '@/components/Svg/index.astro'
import { getLocaleFromUrl } from '@/i18n/utils'

type Props = {
  'data-border-image-url'?: string
}

const locale = getLocaleFromUrl(Astro.url)
const t = await getEntry('i18n', `${locale}/translation`)
const { 'data-border-image-url': borderImageUrl } = Astro.props
---

<div id="search-modal" class="hidden">
  <div id="search-wrapper">
    <div id="search"></div>
  </div>
</div>
<button type="button" id="search-icon-button">
  <span class="sr-only">{t.data.search.button_label}</span>
  <Svg iconName="magnifier" width={32} height={32} />
</button>
<style define:vars={{ borderImageUrl }}>
  #search-modal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    width: 100vw;
    height: 100vh;
    padding-top: 2.25rem;
    z-index: 90;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    background-color: hsla(223, 13%, 10%, 0.7);
    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.25);
    --pagefind-ui-background: var(--bg);
    --pagefind-ui-border: var(--line);
    --pagefind-ui-text: var(--fg);
    --pagefind-ui-primary: var(--fg);
    --pagefind-ui-border-width: 1px;
    --pagefind-ui-border-radius: 3px;
    --pagefind-ui-font: initial;
    --pagefind-ui-tag: color-mix(in srgb, var(--code) 95%, var(--fg) 5%);
  }
  #search-modal.hidden {
    display: none;
  }
  #search-wrapper {
    background-color: color-mix(in srgb, var(--bg) 97%, var(--fg) 3%);
    width: 100%;
    max-width: 38rem;
    max-height: 85vh;
    padding: 1.5rem 1rem;
    border-image-source: var(--borderImageUrl);
    border-image-slice: 12;
    border-image-repeat: repeat;
    border-image-outset: 0.2rem;
    border-style: solid;
    border-width: 8px;
    image-rendering: pixelated;
    margin: 0 1.5rem;
    overflow-y: auto;
    box-sizing: border-box;
  }
  #search-icon-button {
    background-color: transparent;
    color: var(--fg);
    border: none;
    cursor: pointer;
    padding: 0;
  }
</style>
<script>
  import { PagefindUI } from '@pagefind/default-ui'

  function initPagefind() {
    new PagefindUI({
      element: '#search',
    })

    const listenToModalEvents = (
      modalButton: Element,
      modal: Element,
      input: HTMLInputElement
    ) => {
      modalButton.addEventListener('click', () => {
        modal.classList.toggle('hidden')
        input.focus()
      })

      modal.addEventListener('click', (e) => {
        if (e.target === modal) {
          modal.classList.toggle('hidden')
        }
      })

      window.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
          modal.classList.add('hidden')
        }
        if (e.code === 'KeyF' && e.ctrlKey && e.shiftKey) {
          e.preventDefault()
          modal.classList.toggle('hidden')
          input.focus()
        }
      })
    }

    const modalButton = document.querySelector('#search-icon-button')
    const modal = document.querySelector('#search-modal')
    const input = document.querySelector(
      '.pagefind-ui__search-input'
    ) as HTMLInputElement | null

    if (modalButton && modal && input) {
      listenToModalEvents(modalButton, modal, input)
    }
  }

  document.addEventListener('DOMContentLoaded', initPagefind)
  document.addEventListener('astro:after-swap', initPagefind)
</script>
