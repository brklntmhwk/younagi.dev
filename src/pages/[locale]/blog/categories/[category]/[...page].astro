---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro'
import { getCollection, getEntry } from 'astro:content'
import BaseLayout from '@/layouts/BaseLayout.astro'
import BlogList from '@/components/BlogList.astro'
import Pager from '@/components/Pager.astro'
import { LIMIT_PER_PAGE } from '@/consts'
import { langList } from '@/i18n/ui'

export const getStaticPaths = (async ({ paginate }) => {
  const entries = (await getCollection('blog')).sort(
    (a, b) => a.data.publishedAt.valueOf() - b.data.publishedAt.valueOf()
  )
  const categories = [
    ...new Set(entries.flatMap((entry) => entry.data.category)),
  ]
  //これだとenのパスしか生成されない
  // const [locale, ..._slug] = entries.at(0)!.slug.split('/')

  return langList.flatMap((lang) => {
    return categories.flatMap((category) => {
      const displayEntries = entries.filter(
        (entry) =>
          entry.data.category[0] === category &&
          entry.slug.split('/')[0] === lang
      )

      return paginate(displayEntries, {
        pageSize: LIMIT_PER_PAGE,
        params: { locale: lang, category },
      })
    })
  })
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { page } = Astro.props
const { category, locale } = Astro.params
const meta = await getEntry('meta', `${locale}/site-data`)
---

<BaseLayout
  title={`${meta.data.blog.title} - Category: ${category}`}
  description={meta.data.blog.description}
>
  <main data-pagefind-ignore="all">
    <section>
      <h1>{category}</h1>
      <a href={`/${locale}/blog/categories/`}>◀ Back to Category List</a>
      <BlogList entries={page.data} kind="taxonomy" />
    </section>
    <Pager page={page} />
  </main>
</BaseLayout>
<style>
  main {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap: 4rem;
  }
  h1 {
    text-transform: capitalize;
  }
</style>
