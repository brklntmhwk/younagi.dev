---
import { getEntry } from 'astro:content';
import { Taxonomy } from '@/components/models/Taxonomy';
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getCategories } from '@/lib/collections/data';
import { langList } from '@/utils/i18n/data';
import { compareCharsInLocale } from '@/utils/i18n/utils';
import type { GetStaticPaths } from 'astro';

export const getStaticPaths = (() => {
  return langList.map((lang) => ({ params: { locale: lang } }));
}) satisfies GetStaticPaths;

const { locale } = Astro.params;
const meta = await getEntry('meta', `${locale}/site-data`);
const t = await getEntry('i18n', `${locale}/translation`);
const categories = await getCategories(locale);
const sortedCategories = categories.data.sort((a, b) =>
  compareCharsInLocale(a.ruby, b.ruby, locale),
);
---

<BaseLayout
  title={meta.data.blog.categories.title}
  description={meta.data.blog.categories.description}
  og={{ show: true }}
>
  <main data-pagefind-ignore="all">
    <h1 class="text-4xl md:text-5xl font-extrabold">{t.data.pages.blog.categories.title}</h1>
    <a class="text-lg md:text-xl text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-500" href={`/${locale}/blog`}
      >â—€ {t.data.pages.blog.back_to_top}</a
    >
    <hr />
    <section class="category-cloud">
      {
        sortedCategories.map((category) => (
          <Taxonomy kind="categories" taxonomy={category} />
        ))
      }
    </section>
  </main>
</BaseLayout>
<style>
  main {
    h1 {
      margin-bottom: 1.25rem;
    }
    .category-cloud {
      display: flex;
      flex-wrap: wrap;
      gap: 1.5rem 0.575rem;
    }
  }
</style>
