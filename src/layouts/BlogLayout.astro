---
import 'katex/dist/katex.min.css'
import type { MarkdownHeading } from 'astro'
import type { CollectionEntry } from 'astro:content'
import { getEntry } from 'astro:content'
import BaseLayout from '@/layouts/BaseLayout.astro'
import { Article } from '@/components/Article'
import { Likes } from '@/components/islands/Likes/Likes'
import BuyMeACoffee from '@/components/BuyMeACoffee.astro'
import FormattedDate from '../components/FormattedDate.astro'
import { Taxonomy } from '@/components/Taxonomy'
import Toc from '@/components/Toc.astro'
import { Icon } from '@/components/Icon'
import { getLocaleFromUrl } from '@/utils/i18n/get-locale-from-url'
import { useTranslatedPath } from '@/utils/i18n/use-translated-path'
import { getRawSlug } from '@/utils/get-raw-slug'
import { getCategory, getBlogTags } from '@/lib/collections/data'

type Props = {
  entry: CollectionEntry<'blog'>
  headings: MarkdownHeading[]
}

const locale = getLocaleFromUrl(Astro.url)
const t = await getEntry('i18n', `${locale}/translation`)
const translatePath = useTranslatedPath(locale)
const { entry, headings } = Astro.props
const { data, collection, slug } = entry
const {
  title,
  description,
  category: blogCategory,
  tags: blogTags,
  publishedAt,
  modifiedAt,
} = data
const rawSlug = getRawSlug(slug)
const category = await getCategory(blogCategory.id)
const tags = await getBlogTags(blogTags, locale)
---

<BaseLayout
  title={title}
  description={description ?? ''}
  og={{
    show: true,
    height: 630,
    width: 1200,
    image: new URL(
      '/api/og' + translatePath(`/${collection}/${rawSlug}.png`),
      Astro.site
    ),
    type: 'article',
  }}
>
  <main>
    <Article kind="blog">
      <section slot="metadata" class="blog-metadata">
        <div class="date-meta">
          <div class="published">
            <Icon iconName="publish" width={20} height={20} />
            <FormattedDate date={publishedAt} locale={locale} />
          </div>
          {
            modifiedAt && (
              <div class="updated">
                <Icon iconName="update" width={20} height={20} />
                <FormattedDate date={modifiedAt} locale={locale} />
              </div>
            )
          }
        </div>
        <h1 class="entry-title">{title}</h1>
        <div class="taxonomies">
          <Taxonomy taxonomy={category} />
          {tags.length !== 0 && tags.map((tag) => <Taxonomy taxonomy={tag} />)}
        </div>
        <Toc {headings} />
      </section>
      <section slot="content" class="prose">
        <slot />
      </section>
      <section slot="cta" class="cta">
        <Likes
          client:only="solid-js"
          slug={rawSlug}
          {collection}
          t={t.data.likes}
        />
        <BuyMeACoffee />
      </section>
    </Article>
  </main>
</BaseLayout>
<style is:global>
  article {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    gap: 0.5rem;
    hr {
      width: 100%;
    }
    .blog-metadata {
      display: flex;
      flex-direction: column;
      gap: 0.975rem;
      align-items: center;
      margin: 0 auto;
      .date-meta {
        font-size: 1.15rem;
        display: flex;
        flex-wrap: wrap;
        gap: 1.25rem;
        .published,
        .updated {
          display: flex;
          align-items: center;
          gap: 0.5rem;
        }
      }
      .entry-title {
        text-align: center;
        line-height: 1.175;
      }
      .taxonomies {
        padding: 1.25rem 0;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        gap: 1.175rem 0.85rem;
        & a {
          font-size: 0.875rem;
          @media (min-width: 640px) {
            font-size: 1.15rem;
          }
        }
      }
      @media (min-width: 768px) {
        max-width: 48rem;
      }
    }
    .prose {
      font-size: 1.125rem;
      overflow-wrap: break-word;
      word-wrap: break-word;
      line-height: 1.65;
      & h1 {
        margin-top: 1.85rem;
        margin-bottom: 1.85rem;
      }
      & h2,
      & h3 {
        margin-top: 1.85rem;
        margin-bottom: 1.85rem;
      }
      & h4 {
        margin-top: 1.85rem;
        margin-bottom: 1.85rem;
      }
      & h5,
      & h6 {
        margin-top: 1.85rem;
        margin-bottom: 1.85rem;
      }
      & h2,
      h3,
      h4,
      h5,
      h6 {
        a {
          text-decoration: none;
          font-family: var(--base-font);
          .heading-anchor-icon {
            color: var(--fg);
            margin-right: 0.5rem;
          }
          &:hover {
            text-decoration: underline;
            text-underline-offset: 4px;
            text-decoration-color: var(--fg);
          }
        }
      }
      & p {
        color: var(--fg);
        margin-bottom: 1.5rem;
      }
      & ul,
      & ol {
        margin: 1.75rem 0;
        padding-inline-start: 2.5rem;
      }
      & ul {
        & li {
          list-style-type: square;
        }
      }
      & ol {
        & li {
          list-style-type: decimal;
        }
      }
      & li:has(ul),
      & li:has(ol) {
        & ul,
        & ol {
          margin: 0.5rem 0;
        }
      }
      & p,
      & li {
        & a {
          color: var(--accent);
          text-decoration: underline;
          text-underline-offset: 3px;
          &:hover {
            color: var(--accent-dark);
          }
        }
      }
      & code:not(figure[data-rehype-pretty-code-figure] code) {
        font-size: 0.95rem;
        color: var(--gray-dark);
        background-color: var(--gray);
        padding: 0.1rem 0.25rem;
        margin: 0 0.1rem;
        border-radius: 0.25rem;
      }
      & table {
        display: block;
        max-width: 86vw;
        border-collapse: collapse;
        table-layout: fixed;
        overflow-x: auto;
        text-align: center;
        margin: 1.25rem 0;
        & th,
        td {
          font-size: 1rem;
          border: 2px solid var(--line);
          padding: 0.5rem 0.65rem;
        }
      }
      & blockquote:not(.callout-blockquote) {
        border-left: 4px solid var(--gray-dark);
        padding: 0 0 0 1.5rem;
        margin: 0px;
        font-size: 1.05rem;
      }
      & .katex-display {
        margin: 1.875rem 0;
      }
    }
    .cta {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      gap: 1.75rem;
    }
  }
</style>
