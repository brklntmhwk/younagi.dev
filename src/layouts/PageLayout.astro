---
import type { CollectionEntry } from 'astro:content';
import { Article } from '@/components/models/Article';
import { FormattedDate } from '@/components/models/FormattedDate';
import { Icon } from '@/components/ui/Icon';
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getLocaleFromUrl } from '@/utils/i18n/utils';

type Props = {
  page: CollectionEntry<'page'>;
};

const locale = getLocaleFromUrl(Astro.url);
const { page } = Astro.props;
const { title, description, modifiedAt } = page.data;
---

<BaseLayout title={title} description={description ?? ''} og={{ show: true }}>
  <main data-pagefind-ignore="all">
    <Article kind="page">
      <section slot="metadata" class="flex flex-col gap-4">
        <h1 class="text-3xl sm:text-4xl md:text-5xl font-extrabold leading-snug sm:leading-snug md:leading-snug">{title}</h1>
        <div class="text-sm xs:text-base sm:text-lg flex flex-wrap gap-x-4 gap-y-1">
          {
            modifiedAt && (
              <div class="flex items-center gap-1.5">
                <Icon iconName="update" width={20} height={20} />
                <FormattedDate date={modifiedAt} locale={locale} />
              </div>
            )
          }
        </div>
      </section>
      <section slot="content" class="page-content">
        <slot />
      </section>
    </Article>
  </main>
</BaseLayout>
<style is:global>
  article {
    .page-content {
      font-size: 1.125rem;
      overflow-wrap: break-word;
      word-wrap: break-word;
      line-height: 1.65;
      & h1 {
        margin-top: 1.85rem;
        margin-bottom: 1.85rem;
      }
      & h2,
      & h3 {
        margin-top: 1.85rem;
        margin-bottom: 1.85rem;
      }
      & h4 {
        margin-top: 1.85rem;
        margin-bottom: 1.85rem;
      }
      & h5,
      & h6 {
        margin-top: 1.85rem;
        margin-bottom: 1.85rem;
      }
      & h2,
      h3,
      h4,
      h5,
      h6 {
        a {
          text-decoration: none;
          .heading-anchor-icon {
            color: var(--color-fg);
            margin-right: 0.5rem;
          }
          &:hover {
            text-decoration: underline;
            text-underline-offset: 4px;
            text-decoration-color: var(--color-fg);
          }
        }
      }
      & p {
        color: var(--color-fg);
        margin-bottom: 1.25rem;
      }
      & ul,
      & ol {
        margin: 1.75rem 0;
        padding-inline-start: 2.5rem;
        & li {
          list-style-type: square;
        }
      }
      & li:has(ul),
      & li:has(ol) {
        & ul,
        & ol {
          margin: 0.5rem 0;
        }
      }
      & p,
      & li {
        & a {
          color: var(--color-accent);
          text-decoration: underline;
          text-underline-offset: 3px;
          &:hover {
            color: var(--color-dark-accent);
          }
        }
      }
      & code:not(figure[data-rehype-pretty-code-figure] code) {
        font-size: 0.95rem;
        background-color: var(--color-gray);
        padding: 0.1rem 0.25rem;
        margin: 0 0.1rem;
        border-radius: 0.25rem;
      }
      & blockquote:not(.callout-blockquote) {
        border-left: 4px solid var(--color-dark-gray);
        padding: 0 0 0 1.5rem;
        margin: 0px;
        font-size: 1.05rem;
      }
    }
  }
</style>
