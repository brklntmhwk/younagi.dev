---
import type { Page } from 'astro'
import type { CollectionEntry } from 'astro:content'
import Svg from '@/components/Svg/index.astro'
import { DEFAULT_PAGINATION_WIDTH } from '@/lib/consts'

type Props = {
  page?: Page<CollectionEntry<'blog'>>
}

const currentPath = Astro.url.pathname
const { page } = Astro.props

const paginator = (
  curPageNum: number,
  totalPageNum: number,
  width: number = DEFAULT_PAGINATION_WIDTH
) => {
  const prevEnd = curPageNum - width
  const nextEnd = curPageNum + width
  const ranges = []
  for (let i = 1; i <= totalPageNum; i += 1) {
    if (curPageNum === 1) {
      if (i <= nextEnd) ranges.push(i)
    } else if (curPageNum === totalPageNum) {
      if (i >= prevEnd) ranges.push(i)
    } else {
      if (i >= prevEnd && i <= nextEnd) ranges.push(i)
    }
  }

  return ranges
}
---

{
  page !== undefined && (
    <>
      <nav data-pagefind-ignore="all">
        {page.url.prev ? (
          <div>
            <a href={page.url.prev}>
              <Svg iconName="chevron-left" width={22} height={22} />
            </a>
          </div>
        ) : (
          <Svg iconName="chevron-left" width={22} height={22} />
        )}
        <section class="page-nums">
          {paginator(page.currentPage, page.lastPage).map((pg) => {
            if (pg === page.currentPage) {
              return <li>{pg}</li>
            } else {
              if (pg === 1) {
                return (
                  <li>
                    <a
                      href={`/${currentPath.split('/').slice(1, -2).join('/')}/`}
                    >
                      {pg}
                    </a>
                  </li>
                )
              } else {
                return (
                  <li>
                    {page.currentPage === 1 ? (
                      <a
                        href={`/${currentPath.split('/').slice(1, -1)}/${pg}/`}
                      >
                        {pg}
                      </a>
                    ) : (
                      <a
                        href={`/${currentPath.split('/').slice(1, -2).join('/')}/${pg}/`}
                      >
                        {pg}
                      </a>
                    )}
                  </li>
                )
              }
            }
          })}
        </section>
        {page.url.next ? (
          <div>
            <a href={page.url.next}>
              <Svg iconName="chevron-right" width={22} height={22} />
            </a>
          </div>
        ) : (
          <Svg iconName="chevron-right" width={22} height={22} />
        )}
      </nav>
    </>
  )
}

<style>
  nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 10px;
  }
  section.page-nums {
    display: flex;
    column-gap: 1.5em;
  }
  nav li {
    list-style-type: none;
    font-size: 20px;
  }
  nav a {
    text-decoration: none;
  }
</style>
