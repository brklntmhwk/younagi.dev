---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro'
import AboutLayout from '@/layouts/AboutLayout.astro'
import ContactLayout from '@/layouts/ContactLayout.astro'
import PageLayout from '@/layouts/PageLayout.astro'
import { getSortedContentEntries } from '@/lib/collections/contents'
import { mdxComponents } from '@/lib/mdx-components'
import { defaultLang } from '@/utils/i18n/data'
import { getSlugWithoutLocale } from '@/utils/get-slug-without-locale'
import { getLocaleFromSlug } from '@/utils/get-locale-from-slug'

export const getStaticPaths = (async () => {
  const pages = await getSortedContentEntries('page')
  const LocalePages = pages.filter(
    (page) => getLocaleFromSlug(page.slug) !== defaultLang
  )

  return LocalePages.map((page) => {
    const locale = getLocaleFromSlug(page.slug)
    const slug = getSlugWithoutLocale(page.slug)

    return {
      params: {
        slug,
        locale,
      },
      props: {
        page,
      },
    }
  })
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { page } = Astro.props
const { Content, headings } = await page.render()
---

{
  page.slug.slice(page.slug.indexOf('/') + 1) === 'about' ? (
    <AboutLayout {headings}>
      <Content components={mdxComponents} />
    </AboutLayout>
  ) : page.slug.slice(page.slug.indexOf('/') + 1) === 'contact' ? (
    <ContactLayout page={page}>
      <Content components={mdxComponents} />
    </ContactLayout>
  ) : (
    <PageLayout page={page}>
      <Content components={mdxComponents} />
    </PageLayout>
  )
}
