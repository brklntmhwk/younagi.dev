---
import { getEntry } from 'astro:content';
import { Image } from '@/components/elements/Figure';
import { ProfileIcon } from '@/components/ui/ProfileIcon';
import { getBlur } from '@/lib/blur';
import type { UnsplashPhoto } from '@/lib/unsplash/types';
import { getTimeDiff } from '@/utils/get-time-diff';
import { getLocaleFromUrl } from '@/utils/i18n/utils';
import { toSnakeCase } from '@/utils/to-snake-case';
import wretch from 'wretch';
import PhotoItemFrame from './PhotoItemFrame.astro';

type Props = {
  photo: UnsplashPhoto;
  order: number;
};

const locale = getLocaleFromUrl(Astro.url);
const t = await getEntry('i18n', `${locale}/translation`);
const meta = await getEntry('meta', 'en/site-data');
const { photo, order } = Astro.props;
const { alt_description, description, created_at, links, urls, user } = photo;
const buffer = await wretch(urls.raw)
  .get()
  .arrayBuffer()
  .then((data) => Buffer.from(data));
const placeholder = await getBlur(buffer, 8, 'webp');
const createdAt = new Date(created_at);
const dateDiff = getTimeDiff(createdAt, locale);
---

<PhotoItemFrame>
  <a
    aria-label={`${t!.data.photo_gallery_item.photo_label}${order}`}
    href={`${links.html}?utm_source=${toSnakeCase(meta!.data.site.title)}&utm_medium=referral`}
  >
    <Image
      class="w-full max-h-32 object-cover"
      alt={alt_description || description || ''}
      src={`${urls.raw}&fm=jpg&w=1080&q=75&fit=max`}
      {placeholder}
    />
  </a>
  <section class="text-xs md:text-sm flex items-center flex-wrap justify-between gap-2 pt-0.5 md:pt-1.5 pb-1 md:pb-2 px-1 md:px-2">
    <div class="flex items-center gap-1.5 md:gap-2">
      <ProfileIcon
        alt={photo.user.username}
        src={photo.user.profile_image.small}
        size={20}
      />
      <span>{user.last_name}</span>
    </div>
    <span class="ml-2">
      {dateDiff}
    </span>
  </section>
</PhotoItemFrame>
