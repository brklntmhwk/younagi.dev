---
import { getEntry } from 'astro:content';
import { BlogList } from '@/components/BlogList';
import { Pager } from '@/components/Pager';
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getSortedContentEntries } from '@/lib/collections/contents';
import { getTags } from '@/lib/collections/data';
import { LIMIT_PER_PAGE } from '@/lib/consts';
import { defaultLang } from '@/utils/i18n/data';
import { slugify } from '@/utils/slugify';
import type { GetStaticPaths } from 'astro';

export const getStaticPaths = (async ({ paginate }) => {
  const entries = await getSortedContentEntries('blog', defaultLang);
  const tags = await getTags(defaultLang);

  return tags.data.flatMap((tag) => {
    const displayEntries = entries.filter((entry) =>
      entry.data.tags.slugList?.some((blogTag) => blogTag === tag.slug),
    );

    return paginate(displayEntries, {
      pageSize: LIMIT_PER_PAGE,
      params: { tag: slugify(tag.slug) },
      props: { title: tag.title },
    });
  });
}) satisfies GetStaticPaths;

const { page, title } = Astro.props;
const { tag } = Astro.params;
const meta = await getEntry('meta', `${defaultLang}/site-data`);
const t = await getEntry('i18n', `${defaultLang}/translation`);
---

<BaseLayout
  title={`${meta.data.blog.title} - ${meta.data.blog.tags.title}: ${tag}`}
  description={meta.data.blog.description}
  og={{ show: true }}
>
  <main data-pagefind-ignore="all">
    <section>
      <h1>{title}</h1>
      <a class="classic-blue-link" href={'/blog/tags'}>
        â—€ {t.data.pages.blog.tags.back_to_top}
      </a>
      <BlogList
        entries={page.data}
        taxonomies={{ show: true, shouldDisplay: ['category'] }}
      />
    </section>
    <Pager page={page} />
  </main>
</BaseLayout>
<style>
  main {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap: 4rem;
    section {
      h1 {
        margin-bottom: 1.25rem;
      }
    }
  }
</style>
