---
import { getEntry } from 'astro:content'
import { getLocaleFromUrl } from '@/utils/i18n/utils'

const locale = getLocaleFromUrl(Astro.url)
const t = await getEntry('i18n', `${locale}/translation`)
---

<aside class="nav-menu-container">
  <slot name="outside-drawer" />
  <input
    type="checkbox"
    id="menu-toggle-check"
    placeholder={t.data.nav.hamburger_label}
  />
  <label for="menu-toggle-check" class="hamburger-icon-btn">
    <span></span>
  </label>
  <div class="nav-menu-drawer">
    <slot name="inside-drawer" />
  </div>
</aside>
<style>
  .nav-menu-container {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    @media (min-width: 320px) {
      justify-content: end;
    }
    @media (min-width: 640px) {
      gap: 0.5rem;
    }
    @media (min-width: 768px) {
      gap: 0.785rem;
    }
    @media (min-width: 1024px) {
      flex-direction: column-reverse;
      justify-content: space-between;
      gap: 0;
    }
    /* @media (min-width: 768px) {
      flex-direction: row-reverse;
      gap: 0.85rem;
    } */
    .nav-menu-drawer {
      width: 100%;
      height: 100dvh;
      position: fixed;
      top: 0;
      left: 100%;
      z-index: 50;
      display: flex;
      flex-direction: column;
      gap: 3.5rem;
      padding-top: 3rem;
      margin-top: 4.25rem;
      background-color: var(--mobile-nav-bg);
      /* transform: translateX(100%);
    transition: transform 0.4s ease-in-out; */
      transition: left 0.4s ease-in-out;
      will-change: left;
      /* @media (min-width: 768px) {
        width: unset;
        height: 100%;
        position: static;
        z-index: 0;
        display: flex;
        justify-content: space-between;
        flex-direction: unset;
        align-items: center;
        gap: 4rem;
        padding-top: 0;
        margin-top: 0;
        background-color: transparent;
        transition: unset;
        transform: unset;
      } */
      @media (min-width: 1024px) {
        grid-area: nav-menu;
        /* grid-template-rows: 7fr 1fr;
        grid-template-columns: 1fr;
        grid-template-areas:
          'nav-links'
          'icon-links'; */
        height: 100%;
        position: static;
        z-index: 10;
        display: grid;
        gap: 0;
        padding-top: 0;
        margin-top: 0;
        background-color: transparent;
        transition: unset;
        transform: unset;
      }
    }
    .hamburger-icon-btn {
      display: flex;
      place-self: center;
      height: 2.5rem;
      width: 2.5rem;
      cursor: pointer;
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 50;
      @media (min-width: 1024px) {
        display: none;
      }
      /* @media (min-width: 768px) {
        display: none;
      } */
    }
    .hamburger-icon-btn span,
    .hamburger-icon-btn span:before,
    .hamburger-icon-btn span:after {
      font-family: var(--base-font);
      content: '';
      display: block;
      height: 3px;
      width: 25px;
      background-color: var(--fg);
      position: absolute;
    }
    .hamburger-icon-btn span:before {
      bottom: 8px;
    }
    .hamburger-icon-btn span:after {
      top: 8px;
    }
    #menu-toggle-check:checked ~ .hamburger-icon-btn span {
      background-color: transparent;
    }
    #menu-toggle-check:checked ~ .hamburger-icon-btn span::before {
      bottom: 0;
      transform: rotate(45deg);
    }
    #menu-toggle-check:checked ~ .hamburger-icon-btn span::after {
      top: 0;
      transform: rotate(-45deg);
    }
    #menu-toggle-check:checked ~ .nav-menu-drawer {
      left: 0;
      /* transform: translateX(-100%); */
    }
    #menu-toggle-check {
      appearance: none;
    }
  }
</style>
