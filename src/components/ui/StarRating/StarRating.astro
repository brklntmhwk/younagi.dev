---
import { getEntry } from 'astro:content';
import { Icon } from '@/components/ui/Icon';
import { getLocaleFromUrl } from '@/utils/i18n/utils';
import { StarIcon } from './StarIcon';

type Props = {
  method: 'spectrum' | 'rating';
  leftEnd?: string;
  rightEnd?: string;
  value: number;
  total?: number;
};

const locale = getLocaleFromUrl(Astro.url);
const { method, leftEnd, rightEnd, value, total = 5 } = Astro.props;
const t = await getEntry('i18n', `${locale}/translation`);
const isLessThanOrEqualTo = (a: number, b: number) => a <= b;

if (!isLessThanOrEqualTo(value, total)) {
  throw new Error('The value must be less than or equal to the total');
}

const counts = Array.from({ length: total }, (_, i) => i + 1);
---

<div class="hidden xxs:w-full xxs:flex xxs:flex-col xxs:items-center xxs:justify-center xxs:gap-3.5 xxs:p-3">
  <div class="w-full max-w-lg flex justify-between">
    {
      leftEnd && rightEnd && (
        <>
          <div class="text-sm sm:text-base flex items-center justify-center max-w-28">
            <Icon iconName="left-arrow" width={20} height={20} />
            <span class="w-full whitespace-nowrap overflow-ellipsis overflow-hidden">{leftEnd}</span>
          </div>
          <span class="text-sm sm:text-base">{`${value}/${total}`}</span>
          <div class="text-sm sm:text-base flex items-center justify-center max-w-28">
            <span class="w-full whitespace-nowrap overflow-ellipsis overflow-hidden">{rightEnd}</span>
            <Icon iconName="right-arrow" width={20} height={20} />
          </div>
        </>
      )
    }
  </div>
  <div class="w-full flex flex-wrap justify-center items-center gap-3">
    {
      counts.map((n) => {
        switch (method) {
          case 'spectrum': {
            if (n === value) {
              return (
                <StarIcon
                  client:only="solid"
                  width={28}
                  height={28}
                  label={t.data.star_rating.icon_label}
                  isBright={true}
                />
              )
            } else {
              return (
                <StarIcon
                  client:only="solid"
                  width={28}
                  height={28}
                  label={t.data.star_rating.icon_label}
                  isBright={false}
                />
              )
            }
          }
          case 'rating': {
            if (isLessThanOrEqualTo(n, value)) {
              return (
                <StarIcon
                  client:only="solid"
                  width={28}
                  height={28}
                  label={t.data.star_rating.icon_label}
                  isBright={true}
                />
              )
            } else {
              return (
                <StarIcon
                  client:only="solid"
                  width={28}
                  height={28}
                  label={t.data.star_rating.icon_label}
                  isBright={false}
                />
              )
            }
          }
        }
      })
    }
  </div>
</div>
