---
import type { CollectionEntry } from 'astro:content'
import BaseLayout from '@/layouts/BaseLayout.astro'
import FormattedDate from '../components/FormattedDate.astro'
import Svg from '@/components/Svg/index.astro'
import { getLocaleFromUrl } from '@/i18n/utils'

type Props = CollectionEntry<'blog'>['data']

const locale = getLocaleFromUrl(Astro.url)
const {
  title,
  description,
  category,
  tags,
  publishedAt,
  modifiedAt,
  heroImage,
} = Astro.props
---

<BaseLayout title={title} description={description ?? ''}>
  <main>
    <article>
      <section class="blog-metadata">
        <div class="hero-image">
          {
            heroImage && (
              <img width={1020} height={510} src={heroImage} alt="" />
            )
          }
        </div>
        <div class="date-meta">
          <div>
            <Svg iconName="upload" width={20} height={20} />
            <FormattedDate date={publishedAt} />
          </div>
          {
            modifiedAt && (
              <div>
                <Svg iconName="update" width={20} height={20} />
                <FormattedDate date={modifiedAt} />
              </div>
            )
          }
        </div>
        <h1 class="entry-title">{title}</h1>
        <section class="taxonomies">
          <a href={`/${locale}/blog/categories/${category}/`}>{category}</a>
          {
            tags && (
              <ul class="tag-list">
                {tags.map((tag) => (
                  <li>
                    <a href={`/${locale}/blog/tags/${tag}/`}>#{tag}</a>
                  </li>
                ))}
              </ul>
            )
          }
        </section>
      </section>
      <hr />
      <div class="prose">
        <slot />
      </div>
    </article>
  </main>
</BaseLayout>
<style>
  article {
    display: grid;
  }
  hr {
    width: 100%;
  }
  section.taxonomies {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 1.25rem;
    text-transform: capitalize;
    & a {
      color: var(--accent);
      &:hover {
        color: var(--accent-dark);
      }
    }
  }
  .date-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 1.25rem;
  }
  ul.tag-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.65rem;
    margin: 0;
  }
  .prose {
    font-family: 'DotGothic16', sans-serif;
    color: var(--gray-dark);
    a {
      color: var(--accent);
      &:hover {
        color: var(--accent-dark);
      }
    }
    p {
      margin-bottom: 1.25rem;
    }
    h2,
    h3,
    h4,
    h5,
    h6 {
      a {
        span.heading-anchor-icon {
          font-family: 'PixelMplus10', sans-serif;
          font-weight: 700;
          color: var(--gray-dark);
          margin-right: 0.5rem;
        }
        &:hover {
          text-decoration: underline;
          text-underline-offset: 4px;
          text-decoration-color: var(--gray-dark);
        }
      }
    }
  }
</style>
