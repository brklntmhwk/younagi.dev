---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro'
import BaseLayout from '@/layouts/BaseLayout.astro'
import { getEntry } from 'astro:content'
import TaxonomyList from '@/components/TaxonomyList.astro'
import { langList } from '@/utils/i18n/data'
// import { getSortedContentEntries } from '@/lib/collections/contents'
import { getCategories } from '@/lib/collections/data'

export const getStaticPaths = (() => {
  return langList.map((lang) => ({ params: { locale: lang } }))
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { locale } = Astro.params
const meta = await getEntry('meta', `${locale}/site-data`)
const t = await getEntry('i18n', `${locale}/translation`)
// const entries = await getSortedContentEntries('blog', locale)
const categories = await getCategories(locale)
// const categories = [...new Set(entries.flatMap((entry) => entry.data.category))]
---

<BaseLayout
  title={meta.data.blog.categories.title}
  description={meta.data.blog.categories.description}
  og={{ show: true }}
>
  <main data-pagefind-ignore="all">
    <h1>{t.data.pages.blog.categories.title}</h1>
    <a class="back-to-link" href={`/${locale}/blog`}
      >â—€ {t.data.pages.blog.back_to_top}</a
    >
    <hr />
    <TaxonomyList taxonomyList={categories} />
  </main>
</BaseLayout>
<style>
  main {
    h1 {
      margin-bottom: 1.25rem;
    }
  }
</style>
