---
import type { CollectionEntry } from 'astro:content'
import BuyMeACoffee from '@/components/BuyMeACoffee.astro'
import { FormattedDate } from '@/components/FormattedDate'
import { Article } from '@/components/Article'
import { Icon } from '@/components/Icon'
import BaseLayout from '@/layouts/BaseLayout.astro'
import { getLocaleFromUrl, useTranslatedPath } from '@/utils/i18n/utils'
import { getSlugWithoutLocale } from '@/utils/get-slug-without-locale'

type Props = {
  entry: CollectionEntry<'news'>
}

const locale = getLocaleFromUrl(Astro.url)
const translatePath = useTranslatedPath(locale)
const { entry } = Astro.props
const { data, collection, slug } = entry
const { title, publishedAt, modifiedAt } = data
const slugWithoutLocale = getSlugWithoutLocale(slug)
---

<BaseLayout
  title={title}
  description={title}
  og={{
    show: true,
    height: 630,
    width: 1200,
    image: new URL(
      translatePath(`/api/og/${collection}/${slugWithoutLocale}.png`),
      Astro.site
    ),
    type: 'article',
  }}
>
  <main>
    <Article kind="news">
      <section slot="metadata" class="news-metadata">
        <h1 class="news-title">{title}</h1>
        <div class="date-meta">
          <div>
            <Icon iconName="publish" width={20} height={20} />
            <FormattedDate date={publishedAt} locale={locale} />
          </div>
          {
            modifiedAt && (
              <div>
                <Icon iconName="update" width={20} height={20} />
                <FormattedDate date={modifiedAt} locale={locale} />
              </div>
            )
          }
        </div>
      </section>
      <section slot="content" class="news-content">
        <slot />
      </section>
      <section slot="cta">
        <BuyMeACoffee />
      </section>
    </Article>
  </main>
</BaseLayout>
<style is:global>
  article {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    gap: 0.5rem;
    hr {
      width: 100%;
    }
    .news-metadata {
      display: flex;
      flex-direction: column;
      gap: 0.975rem;
      .news-title {
        line-height: 1.175;
      }
      .date-meta {
        font-size: 1.15rem;
        display: flex;
        flex-wrap: wrap;
        gap: 1.25rem;
        div {
          display: flex;
          align-items: center;
          gap: 0.5rem;
        }
      }
    }
    .news-content {
      font-size: 1.125rem;
      overflow-wrap: break-word;
      word-wrap: break-word;
      line-height: 1.65;
      & h1 {
        margin-top: 1.85rem;
        margin-bottom: 1.85rem;
      }
      & h2,
      & h3 {
        margin-top: 1.85rem;
        margin-bottom: 1.85rem;
      }
      & h4 {
        margin-top: 1.85rem;
        margin-bottom: 1.85rem;
      }
      & h5,
      & h6 {
        margin-top: 1.85rem;
        margin-bottom: 1.85rem;
      }
      & h2,
      h3,
      h4,
      h5,
      h6 {
        a {
          text-decoration: none;
          font-family: var(--base-font);
          .heading-anchor-icon {
            color: var(--fg);
            margin-right: 0.5rem;
          }
          &:hover {
            text-decoration: underline;
            text-underline-offset: 4px;
            text-decoration-color: var(--fg);
          }
        }
      }
      & p {
        color: var(--fg);
        margin-bottom: 1.25rem;
      }
      & ul,
      & ol {
        margin: 1.75rem 0;
        padding-inline-start: 2.5rem;
        & li {
          list-style-type: square;
        }
      }
      & li:has(ul),
      & li:has(ol) {
        & ul,
        & ol {
          margin: 0.5rem 0;
        }
      }
      & p,
      & li {
        & a {
          color: var(--accent);
          text-decoration: underline;
          text-underline-offset: 3px;
          &:hover {
            color: var(--accent-dark);
          }
        }
      }
    }
  }
</style>
