---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro'
import { getCollection } from 'astro:content'
import AboutLayout from '@/layouts/AboutLayout.astro'
import ContactLayout from '@/layouts/ContactLayout.astro'
import PageLayout from '@/layouts/PageLayout.astro'
import Blockquote from '@/components/elements/Blockquote.astro'
import FormattedDate from '@/components/FormattedDate.astro'
import Figure from '@/components/elements/Figure.astro'
import Message from '@/components/Message.astro'
import { defaultLang } from '@/utils/i18n/data'

export const getStaticPaths = (async () => {
  const pages = await getCollection('page')
  const LocalePages = pages.filter(
    (page) => page.slug.slice(0, page.slug.indexOf('/')) !== defaultLang
  )

  return LocalePages.map((page) => {
    const locale = page.slug.slice(0, page.slug.indexOf('/'))
    const rawSlug = page.slug.slice(page.slug.indexOf('/') + 1)

    return {
      params: {
        slug: rawSlug,
        locale: locale,
      },
      props: {
        page,
      },
    }
  })
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

export const components = {
  blockquote: Blockquote,
  figure: Figure,
  FormattedDate,
  Message,
}

const { page } = Astro.props
const { Content, headings } = await page.render()
---

{
  page.slug.slice(page.slug.indexOf('/') + 1) === 'about' ? (
    <AboutLayout {headings}>
      <Content components={components} />
    </AboutLayout>
  ) : page.slug.slice(page.slug.indexOf('/') + 1) === 'contact' ? (
    <ContactLayout page={page}>
      <Content components={components} />
    </ContactLayout>
  ) : (
    <PageLayout page={page}>
      <Content components={components} />
    </PageLayout>
  )
}
