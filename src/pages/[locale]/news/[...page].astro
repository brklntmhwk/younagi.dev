---
import { getEntry } from 'astro:content';
import { FormattedDate } from '@/components/models/FormattedDate';
import { Pager } from '@/components/models/Pager';
import { Icon } from '@/components/ui/Icon';
import BaseLayout from '@/layouts/BaseLayout.astro';
import {
  getLocaleContentEntries,
  getSortedContentEntries,
} from '@/lib/collections/contents';
import { LIMIT_PER_PAGE } from '@/lib/consts';
import { nonDefaultLocaleList } from '@/utils/i18n/data';
import type { GetStaticPaths } from 'astro';

export const getStaticPaths = (async ({ paginate }) => {
  const entries = await getSortedContentEntries('news');

  return nonDefaultLocaleList.flatMap((lang) => {
    const displayEntries = getLocaleContentEntries<'news'>(entries, lang);

    return paginate(displayEntries, {
      pageSize: LIMIT_PER_PAGE,
      params: { locale: lang },
    });
  });
}) satisfies GetStaticPaths;

const { locale } = Astro.params;
const { page } = Astro.props;
const meta = await getEntry('meta', `${locale}/site-data`);
const t = await getEntry('i18n', `${locale}/translation`);
---

<BaseLayout
  title={meta!.data.site.title}
  description={meta!.data.site.description}
  og={{ show: true }}
>
  <main class="flex flex-col justify-between gap-16" data-pagefind-ignore="all">
    <section>
      <h1 class="text-3xl sm:text-4xl font-extrabold mb-5">{t!.data.pages.news.title}</h1>
      <ul class="flex flex-col gap-5">
        {
          page.data.map((entry) => (
            <li class="[&:not(:last-child)]:border-b-[1px] [&:not(:last-child)]:border-solid [&:not(:last-child)]:border-line-solid [&:not(:last-child)]:pb-5">
              <article class="flex flex-col gap-3">
                <section class="pt-4 flex flex-wrap gap-x-3.5 gap-y-1.5">
                  <div class="flex items-center gap-1.5">
                    <Icon iconName="publish" width={20} height={20} />
                    <FormattedDate
                      date={entry.data.publishedAt}
                      locale={locale}
                    />
                  </div>
                  {entry.data.updatedAt && (
                    <div class="flex items-center gap-1.5">
                      <Icon iconName="update" width={20} height={20} />
                      <FormattedDate
                        date={entry.data.updatedAt}
                        locale={locale}
                      />
                    </div>
                  )}
                </section>
                <a
                  href={`/${locale}/${entry.collection}/${entry.id.split('/').pop()}/`}
                  class="text-default text-2xl md:text-3xl font-bold leading-normal no-underline hover:underline hover:underline-offset-4"
                >
                  {entry.data.title}
                </a>
              </article>
            </li>
          ))
        }
      </ul>
    </section>
    <Pager page={page} />
  </main>
</BaseLayout>
