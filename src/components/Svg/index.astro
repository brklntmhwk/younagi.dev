---
import type { HTMLAttributes } from 'astro/types'
import { parse } from 'node-html-parser'

type Props = {
  iconName: string
} & HTMLAttributes<'svg'>

const svgGetter = (iconName: string) => {
  const filepath = `./icons/${iconName}.svg`
  const files = import.meta.glob<string>('./icons/**/*.svg', {
    query: '?raw',
    import: 'default',
    eager: true,
  })

  if (!(filepath in files)) {
    throw new Error(`${filepath} not found`)
  }

  const root = parse(files[filepath]!)

  const svg = root.querySelector('svg')

  if (!svg) {
    throw new Error('Invalid svg file or svg tags missing')
  }

  const { attributes, innerHTML } = svg

  return {
    attributes,
    innerHTML,
  }
}

const { iconName, ...attributes } = Astro.props
const { attributes: baseAttributes, innerHTML } = svgGetter(iconName)
const svgAttributes = { ...baseAttributes, ...attributes }
---

<svg {...svgAttributes} set:html={innerHTML} />
