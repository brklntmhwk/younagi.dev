---
import 'katex/dist/katex.min.css'
import type { MarkdownHeading } from 'astro'
import type { CollectionEntry } from 'astro:content'
import { getEntry } from 'astro:content'
import BaseLayout from '@/layouts/BaseLayout.astro'
import BuyMeACoffee from '@/components/BuyMeACoffee.astro'
import FormattedDate from '../components/FormattedDate.astro'
import Toc from '@/components/Toc.astro'
import Svg from '@/components/Svg/index.astro'
import { getLocaleFromUrl } from '@/utils/i18n/getLocaleFromUrl'
import { slugify } from '@/utils/slugify'

type Props = {
  entry: CollectionEntry<'blog'>
  headings: MarkdownHeading[]
}

const locale = getLocaleFromUrl(Astro.url)
const { entry, headings } = Astro.props
const { data, collection, slug } = entry
const { title, description, category, tags, publishedAt, modifiedAt } = data
const t = await getEntry('i18n', `${locale}/translation`)
---

<BaseLayout
  title={title}
  description={description ?? ''}
  og={{
    show: true,
    height: 630,
    width: 1200,
    image: new URL(
      `/og/${locale}/${collection}/${slug.slice(slug.indexOf('/') + 1)}.png`,
      Astro.url
    ),
    type: 'article',
  }}
>
  <main>
    <article>
      <section class="blog-metadata">
        <div class="date-meta">
          <div>
            <Svg iconName="publish" width={20} height={20} />
            <FormattedDate date={publishedAt} locale={locale} />
          </div>
          {
            modifiedAt && (
              <div>
                <Svg iconName="update" width={20} height={20} />
                <FormattedDate date={modifiedAt} locale={locale} />
              </div>
            )
          }
        </div>
        <h1 class="entry-title">{title}</h1>
        <section class="taxonomies">
          <a href={`/${locale}/${collection}/categories/${slugify(category)}/`}
            >{category}</a
          >
          {
            tags && (
              <ul class="tag-list">
                {tags.map((tag) => (
                  <li>
                    <a href={`/${locale}/${collection}/tags/${slugify(tag)}/`}>
                      #{tag}
                    </a>
                  </li>
                ))}
              </ul>
            )
          }
        </section>
        <Toc
          headings={headings}
          data-border-image-url="url(/border-image.gif)"
        />
      </section>
      <hr />
      <section class="prose">
        <slot />
      </section>
      <hr />
      <BuyMeACoffee />
      <section class="guides">
        <a class="back-to-link" href={`/${locale}/blog/`}
          >◀ {t.data.pages.blog.back_to_top}</a
        >
        <a class="back-to-link" href="#top"
          >{t.data.pages.blog.scroll_to_top} ▲</a
        >
      </section>
    </article>
  </main>
</BaseLayout>
<style>
  article {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    gap: 0.5rem;
    hr {
      width: 100%;
    }
    .blog-metadata {
      display: grid;
      gap: 0.85rem;
      place-items: start;
      .date-meta {
        font-size: 1.15rem;
        display: flex;
        flex-wrap: wrap;
        gap: 1.25rem;
        div {
          display: flex;
          align-items: center;
          gap: 0.5rem;
        }
      }
      .entry-title {
        margin: 0;
        line-height: 1.275;
      }
      .taxonomies {
        font-size: 1.15rem;
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: 1.25rem;
        & a {
          color: var(--accent);
          text-decoration: none;
          &:hover {
            color: var(--accent-dark);
          }
        }
        ul.tag-list {
          display: flex;
          flex-wrap: wrap;
          gap: 0.65rem;
          margin: 0;
        }
      }
    }
    .prose {
      font-size: 1.125rem;
      overflow-wrap: break-word;
      word-wrap: break-word;
      line-height: 1.65;
      & :global(p) {
        color: var(--fg);
        margin-bottom: 1.375rem;
      }
      & :global(ul) {
        padding: 0.875rem 0 1.75rem 2.5rem;
        & :global(li) {
          list-style-type: square;
        }
      }
      & :global(ol) {
        padding: 0.85rem 0 1.75rem 2.5rem;
        & :global(li) {
          list-style-type: decimal;
        }
      }
      & :global(a) {
        color: var(--accent);
        text-decoration: underline;
        text-underline-offset: 3px;
        &:hover {
          color: var(--accent-dark);
        }
      }
      & :global(a):has(.heading-anchor-icon) {
        text-decoration: none;
        font-family: var(--base-font);
        & :global(span.heading-anchor-icon) {
          color: var(--fg);
          margin-right: 0.5rem;
        }
        &:hover {
          text-decoration: underline;
          text-underline-offset: 4px;
          text-decoration-color: var(--fg);
        }
      }
      & :global(code:not(figure[data-rehype-pretty-code-figure] code)) {
        font-size: 0.95rem;
        color: var(--gray-dark);
        background-color: var(--gray);
        padding: 0.1rem 0.25rem;
        margin: 0 0.1rem;
        border-radius: 0.25rem;
      }
      & :global(table) {
        display: block;
        max-width: 86vw;
        border-collapse: collapse;
        table-layout: fixed;
        overflow-x: auto;
        text-align: center;
        margin: 1.25rem 0;
        & :global(th, td) {
          font-size: 1rem;
          border: 2px solid var(--line);
          padding: 0.5rem 0.65rem;
        }
      }
      & :global(blockquote) {
        padding: 0.75rem 0.85rem;
        margin-bottom: 1.375rem;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        border-radius: 0.25rem;
        & :global(.callout-title) {
          display: flex;
          gap: 0.6rem;
          align-items: center;
          & :global(.callout-title-text) {
            font-size: 1.15rem;
            font-weight: 600;
          }
        }
        & :global(.callout-content) {
          color: hsla(248.57, 11.48%, 11.96%, 1);
          font-size: 1.025rem;
        }
      }
      & :global(blockquote[data-callout='info']),
      & :global(blockquote[data-callout='tip']),
      & :global(blockquote[data-callout='hint']) {
        background-color: var(--callout-info-bg);
        & :global(.callout-title-text) {
          color: var(--callout-info-fg);
        }
        & :global(.callout-title-icon > svg) {
          stroke: var(--callout-info-fg);
        }
      }
      & :global(blockquote[data-callout='caution']),
      & :global(blockquote[data-callout='attention']),
      & :global(blockquote[data-callout='warning']) {
        background-color: var(--callout-caution-bg);
        & :global(.callout-title-text) {
          color: var(--callout-caution-fg);
        }
        & :global(.callout-title-icon > svg) {
          stroke: var(--callout-caution-fg);
        }
      }
      & :global(blockquote[data-callout='question']),
      & :global(blockquote[data-callout='faq']),
      & :global(blockquote[data-callout='help']) {
        background-color: var(--callout-question-bg);
        & :global(.callout-title-text) {
          color: var(--callout-question-fg);
        }
        & :global(.callout-title-icon > svg) {
          stroke: var(--callout-question-fg);
        }
      }
      & :global(blockquote[data-callout='check']),
      & :global(blockquote[data-callout='success']),
      & :global(blockquote[data-callout='done']) {
        background-color: var(--callout-check-bg);
        & :global(.callout-title-text) {
          color: var(--callout-check-fg);
        }
        & :global(.callout-title-icon > svg) {
          stroke: var(--callout-check-fg);
        }
      }
      & :global(blockquote[data-callout='quote']),
      & :global(blockquote[data-callout='cite']) {
        background-color: var(--callout-quote-bg);
        & :global(.callout-title-text) {
          color: var(--callout-quote-fg);
        }
        & :global(.callout-title-icon > svg) {
          stroke: var(--callout-quote-fg);
        }
      }
      & :global(.katex-display) {
        margin: 1.875rem 0;
      }
    }
    .guides {
      display: flex;
      justify-content: space-between;
      padding-top: 1.5rem;
    }
  }
</style>
