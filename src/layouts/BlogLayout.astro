---
import type { MarkdownHeading } from 'astro'
import type { CollectionEntry } from 'astro:content'
import BaseLayout from '@/layouts/BaseLayout.astro'
import FormattedDate from '../components/FormattedDate.astro'
import Toc from '@/components/Toc.astro'
import Svg from '@/components/Svg/index.astro'
import { getLocaleFromUrl } from '@/i18n/utils'

type Props = {
  entry: CollectionEntry<'blog'>['data']
  headings: MarkdownHeading[]
}

const locale = getLocaleFromUrl(Astro.url)
const { entry, headings } = Astro.props
const {
  title,
  description,
  category,
  tags,
  publishedAt,
  modifiedAt,
  heroImage,
} = entry
---

<BaseLayout title={title} description={description ?? ''}>
  <main>
    <article>
      <section class="blog-metadata">
        <div class="hero-image">
          {
            heroImage && (
              <img width={1020} height={510} src={heroImage} alt="" />
            )
          }
        </div>
        <div class="date-meta">
          <div>
            <Svg iconName="upload" width={20} height={20} />
            <FormattedDate date={publishedAt} locale={locale} />
          </div>
          {
            modifiedAt && (
              <div>
                <Svg iconName="update" width={20} height={20} />
                <FormattedDate date={modifiedAt} locale={locale} />
              </div>
            )
          }
        </div>
        <h1 class="entry-title">{title}</h1>
        <section class="taxonomies">
          <a href={`/${locale}/blog/categories/${category}/`}>{category}</a>
          {
            tags && (
              <ul class="tag-list">
                {tags.map((tag) => (
                  <li>
                    <a href={`/${locale}/blog/tags/${tag}/`}>#{tag}</a>
                  </li>
                ))}
              </ul>
            )
          }
        </section>
        <Toc
          headings={headings}
          data-border-image-url="url(/border-image.gif)"
        />
      </section>
      <hr />
      <div class="prose">
        <slot />
      </div>
    </article>
  </main>
</BaseLayout>
<style>
  article {
    font-family: 'PixelMplus10', sans-serif;
    /* display: flex;
    flex-direction: column;
    flex-grow: 1; */
    display: grid;
    hr {
      width: 100%;
    }
    section.blog-metadata {
      display: grid;
      gap: 0.5rem;
      place-items: start;
      .date-meta {
        font-size: 1.15rem;
        display: flex;
        flex-wrap: wrap;
        gap: 1.25rem;
        div {
          display: flex;
          align-items: center;
          gap: 0.5rem;
        }
      }
      section.taxonomies {
        font-size: 1.15rem;
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: 1.25rem;
        text-transform: capitalize;
        & a {
          color: var(--accent);
          text-decoration: none;
          &:hover {
            color: var(--accent-dark);
          }
        }
        ul.tag-list {
          display: flex;
          flex-wrap: wrap;
          gap: 0.65rem;
          margin: 0;
        }
      }
    }
  }
  .prose {
    font-size: 1.15rem;
    overflow-wrap: break-word;
    word-wrap: break-word;
    & :global(p) {
      font-family: 'DotGothic16', sans-serif;
      color: var(--gray-dark);
      margin-bottom: 1.25rem;
    }
    & :global(ul) {
      padding: 0.85rem 0 0.85rem 2.5rem;
      & :global(li) {
        list-style-type: square;
      }
    }
    & :global(ol) {
      padding: 0.85rem 0 0.85rem 2.5rem;
      & :global(li) {
        list-style-type: decimal;
      }
    }
    & :global(a) {
      color: var(--accent);
      text-decoration: underline;
      text-underline-offset: 3px;
      &:hover {
        color: var(--accent-dark);
      }
    }
    & :global(a):has(.heading-anchor-icon) {
      text-decoration: none;
      & :global(span.heading-anchor-icon) {
        color: var(--black);
        margin-right: 0.5rem;
      }
      &:hover {
        text-decoration: underline;
        text-underline-offset: 4px;
        text-decoration-color: var(--black);
      }
    }
  }
</style>
