---
import type { HTMLAttributes } from 'astro/types'
import { unfurl } from 'unfurl.js'
import { Icon } from '@/components/Icon'

type Props = HTMLAttributes<'a'>

const { href, title: titleProp, ...props } = Astro.props
const url = new URL(href ?? '')
const metadata = await unfurl(url.href).catch(() => undefined)
const favicon = metadata?.favicon
const title =
  titleProp ??
  metadata?.open_graph.title ??
  metadata?.twitter_card.title ??
  metadata?.title ??
  url.hostname
const description =
  metadata?.open_graph?.description ??
  metadata?.twitter_card?.description ??
  metadata?.description
const image = {
  url:
    metadata?.open_graph.images?.[0]?.url ??
    metadata?.twitter_card?.images?.[0]?.url,
  alt:
    metadata?.open_graph?.images?.[0]?.alt ??
    metadata?.twitter_card?.images?.[0]?.alt ??
    title,
}
---

<div class="pokemon-border link-card-wrapper">
  <a href={url.href} class="link-card" {...props}>
    <div class="link-metadata">
      <span class="link-title">{title}</span>
      {description && <span class="link-description">{description}</span>}
      <div class="link-hostname">
        {
          favicon ? (
            <img class="link-favicon" alt={title} {title} src={favicon} />
          ) : (
            <Icon iconName="link" width={15} height={15} />
          )
        }
        <span>{url.hostname}</span>
      </div>
    </div>
    {
      image.url && (
        <div class="link-image">
          <img
            src={image.url}
            alt={image.alt}
            title={image.alt}
            loading="lazy"
          />
        </div>
      )
    }
  </a>
</div>
<style>
  .link-card-wrapper {
    max-width: 40rem;
    height: 103px;
    margin: 2.5rem 0;
    .link-card {
      height: 100%;
      background-color: var(--bg);
      display: flex;
      flex-wrap: nowrap;
      justify-content: space-between;
      overflow: hidden;
      &:hover {
        background-color: var(--bg-hover);
      }
      .link-metadata {
        display: flex;
        flex-direction: column;
        flex-basis: 12rem;
        flex-grow: 1;
        flex-shrink: 1;
        justify-content: space-between;
        padding: 0.5rem 0.875rem;
        white-space: nowrap;
        overflow: hidden;
        .link-title {
          font-size: 1.15rem;
          font-weight: 700;
          line-height: 1.25;
          @media (min-width: 768px) {
            font-size: 1.25rem;
          }
        }
        .link-description {
          font-size: 0.875rem;
          font-weight: 200;
          line-height: 1.2;
        }
        .link-hostname {
          font-size: 0.95rem;
          display: flex;
          align-items: center;
          gap: 0.75rem;
          .link-favicon {
            width: 1.325rem;
            height: 1.325rem;
            border-radius: 9999px;
            object-fit: cover;
          }
        }
        > * {
          overflow: hidden;
          text-overflow: ellipsis;
        }
        @media (min-width: 768px) {
          padding: 0.65rem 0.875rem;
        }
      }
      .link-image {
        max-width: 8.75rem;
        display: flex;
        flex-basis: 6rem;
        flex-grow: 1;
        flex-shrink: 1;
        & :global(img) {
          object-fit: cover;
          width: 100%;
          height: 100%;
        }
        @media (min-width: 768px) {
          max-width: 9.5rem;
          flex-basis: 7rem;
        }
      }
    }
    @media (min-width: 768px) {
      height: 125px;
    }
  }
</style>
