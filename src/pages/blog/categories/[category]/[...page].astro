---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro'
import { getCollection, getEntry } from 'astro:content'
import BaseLayout from '@/layouts/BaseLayout.astro'
import BlogList from '@/components/BlogList.astro'
import Pager from '@/components/Pager.astro'
import { LIMIT_PER_PAGE } from '@/consts'
import { defaultLang } from '@/utils/i18n/data'
import { slugify } from '@/utils/slugify'
import { getPublishedSortedEntries } from '@/lib/collections/contents'

export const getStaticPaths = (async ({ paginate }) => {
  const entries = getPublishedSortedEntries(await getCollection('blog'))
  const categories = [
    ...new Set(entries.flatMap((entry) => entry.data.category)),
  ]

  return categories.flatMap((category) => {
    const displayEntries = entries.filter(
      (entry) =>
        entry.data.category === category &&
        entry.slug.slice(0, entry.slug.indexOf('/')) === defaultLang
    )
    const categorySlug = slugify(category)

    return paginate(displayEntries, {
      pageSize: LIMIT_PER_PAGE,
      params: { category: categorySlug },
      props: { rawCategory: category },
    })
  })
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { page, rawCategory } = Astro.props
const { category } = Astro.params
const meta = await getEntry('meta', `${defaultLang}/site-data`)
const t = await getEntry('i18n', `${defaultLang}/translation`)
---

<BaseLayout
  title={`${meta.data.blog.title} - Category: ${category}`}
  description={meta.data.blog.description}
  og={{ show: true }}
>
  <main data-pagefind-ignore="all">
    <section>
      <h1>{rawCategory}</h1>
      <a class="back-to-link" href={'/blog/categories'}>
        â—€ {t.data.pages.blog.categories.back_to_top}
      </a>
      <BlogList entries={page.data} kind="taxonomy" />
    </section>
    <Pager page={page} />
  </main>
</BaseLayout>
<style>
  main {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap: 4rem;
    section {
      h1 {
        margin-bottom: 1.25rem;
      }
    }
  }
</style>
