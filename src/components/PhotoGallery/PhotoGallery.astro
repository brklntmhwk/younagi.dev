---
import { getEntry } from 'astro:content';
import { CardGrid } from '@/components/Card';
import { ACCOUNT_ID, UNSPLASH_BASE_URL } from '@/lib/consts';
import { getPhotographer } from '@/lib/unsplash/contents';
import type { UnsplashPhotoData } from '@/lib/unsplash/types';
import { getLocaleFromUrl } from '@/utils/i18n/utils';
import PhotoGalleryItem from '../PhotoGallery/PhotoGalleryItem.astro';

type Props = {
  photos: UnsplashPhotoData;
};

const locale = getLocaleFromUrl(Astro.url);
const t = await getEntry('i18n', `${locale}/translation`);
const { photos } = Astro.props;
const username = await getPhotographer();
---

<div class="photo-gallery-wrapper">
  <CardGrid>
    {
      photos &&
        photos.results.map((photo, i) => (
          <PhotoGalleryItem {photo} order={i + 1} />
        ))
    }
  </CardGrid>
  <aside>
    <p>
      {t.data.photo_gallery.credit_label}
      <cite>
        <a href={`${UNSPLASH_BASE_URL}/@${ACCOUNT_ID}`}>{username.name}</a>
      </cite>
      /
      <cite>
        <a href={UNSPLASH_BASE_URL}>Unsplash</a>
      </cite>
    </p>
  </aside>
</div>
<style>
  .photo-gallery-wrapper {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    padding: 1.175rem 0.275rem;
    aside {
      p {
        font-size: 0.875rem;
        a {
          color: var(--accent);
          &:hover {
            color: var(--accent-dark);
          }
        }
        @media (min-width: 768px) {
          font-size: 1.025rem;
        }
      }
    }
  }
</style>
