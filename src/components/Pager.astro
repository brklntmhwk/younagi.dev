---
import type { Page } from 'astro'
import { getEntry } from 'astro:content'
import type { CollectionEntry } from 'astro:content'
import Svg from '@/components/Svg/index.astro'
import { DEFAULT_PAGINATION_WIDTH } from '@/consts'
import { getLocaleFromUrl } from '@/i18n/utils'

type Props = {
  page?: Page<CollectionEntry<'blog'>>
}

const currentPath = Astro.url.pathname
const locale = getLocaleFromUrl(Astro.url)
const t = await getEntry('i18n', `${locale}/translation`)
const { page } = Astro.props

const paginator = (
  curPageNum: number,
  totalPageNum: number,
  width: number = DEFAULT_PAGINATION_WIDTH
) => {
  const prevEnd = curPageNum - width
  const nextEnd = curPageNum + width
  const ranges = []
  for (let i = 1; i <= totalPageNum; i += 1) {
    if (curPageNum === 1) {
      if (i <= nextEnd) ranges.push(i)
    } else if (curPageNum === totalPageNum) {
      if (i >= prevEnd) ranges.push(i)
    } else {
      if (i >= prevEnd && i <= nextEnd) ranges.push(i)
    }
  }

  return ranges
}
---

{
  page !== undefined && (
    <nav data-pagefind-ignore="all">
      {page.url.prev ? (
        <div>
          <a aria-label={t.data.pager.left_arrow_label} href={page.url.prev}>
            <Svg iconName="chevron-left" width={25} height={25} />
          </a>
        </div>
      ) : (
        <Svg iconName="chevron-left" width={25} height={25} />
      )}
      <ul>
        {paginator(page.currentPage, page.lastPage).map((pg) => {
          if (pg === page.currentPage) {
            return <li>{pg}</li>
          } else {
            if (pg === 1) {
              return (
                <li>
                  <a
                    href={`/${currentPath.split('/').slice(1, -2).join('/')}/`}
                  >
                    {pg}
                  </a>
                </li>
              )
            } else {
              return (
                <li>
                  {page.currentPage === 1 ? (
                    <a
                      href={`/${currentPath.split('/').slice(1, -1).join('/')}/${pg}/`}
                    >
                      {pg}
                    </a>
                  ) : (
                    <a
                      href={`/${currentPath.split('/').slice(1, -2).join('/')}/${pg}/`}
                    >
                      {pg}
                    </a>
                  )}
                </li>
              )
            }
          }
        })}
      </ul>
      {page.url.next ? (
        <div>
          <a aria-label={t.data.pager.right_arrow_label} href={page.url.next}>
            <Svg iconName="chevron-right" width={25} height={25} />
          </a>
        </div>
      ) : (
        <Svg iconName="chevron-right" width={25} height={25} />
      )}
    </nav>
  )
}

<style>
  nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 0.35rem;
  }
  nav ul {
    display: flex;
    gap: 1.75rem;
  }
  nav li {
    list-style-type: none;
    font-size: 1.5rem;
  }
  nav a {
    text-decoration: none;
  }
</style>
