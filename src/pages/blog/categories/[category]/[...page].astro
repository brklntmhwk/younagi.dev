---
import { getEntry } from 'astro:content';
import { BlogList } from '@/components/models/BlogList';
import { Pager } from '@/components/models/Pager';
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getSortedContentEntries } from '@/lib/collections/contents';
import { getCategories } from '@/lib/collections/data';
import { LIMIT_PER_PAGE } from '@/lib/consts';
import { defaultLang } from '@/utils/i18n/data';
import { slugify } from '@/utils/slugify';
import type { GetStaticPaths } from 'astro';

export const getStaticPaths = (async ({ paginate }) => {
  const entries = await getSortedContentEntries('blog', defaultLang);
  const categories = await getCategories(defaultLang);

  return categories.data.flatMap((category) => {
    const displayEntries = entries.filter(
      (entry) => entry.data.category.slug === category.slug,
    );

    return paginate(displayEntries, {
      pageSize: LIMIT_PER_PAGE,
      params: { category: slugify(category.slug) },
      props: { title: category.title },
    });
  });
}) satisfies GetStaticPaths;

const { page, title } = Astro.props;
const { category } = Astro.params;
const meta = await getEntry('meta', `${defaultLang}/site-data`);
const t = await getEntry('i18n', `${defaultLang}/translation`);
---

<BaseLayout
  title={`${meta.data.blog.title} - ${meta.data.blog.categories.title}: ${category}`}
  description={meta.data.blog.description}
  og={{ show: true }}
>
  <main class="flex flex-col justify-between gap-16" data-pagefind-ignore="all">
    <section>
      <h1 class="text-3xl md:text-4xl font-extrabold mb-5">{title}</h1>
      <a class="text-base text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-500" href={'/blog/categories/'}>
        â—€ {t.data.pages.blog.categories.back_to_top}
      </a>
      <BlogList
        entries={page.data}
        taxonomies={{ show: true, shouldDisplay: ['tags'] }}
      />
    </section>
    <Pager page={page} />
  </main>
</BaseLayout>
